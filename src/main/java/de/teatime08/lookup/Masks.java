package de.teatime08.lookup;

import de.teatime08.Cell;

import java.util.HashSet;
import java.util.Set;

public interface Masks {

    public static Set<Cell> getMaskFor(int dimension, int radius) {
        switch (dimension) {
            case 2:
                if (radius == 1)
                    return D2R1;
                else if (radius == 2)
                    return D2R2;
                else if (radius == 3)
                    return D2R3;
                else
                    return null;
            case 3:
                if (radius == 1)
                    return D3R1;
                else if (radius == 2)
                    return D2R2;
                else if (radius == 3)
                    return D3R3;
                else
                    return null;
            case 4:
                if (radius == 1)
                    return D4R1;
                else if (radius == 2)
                    return D4R2;
                else
                    return null;
            case 5:
                if (radius == 1)
                    return D5R1;
                else
                    return null;
            case 6:
                if (radius == 1)
                    return D6R1;
                else
                    return null;
            default:
                return null;
        }
    }

    public static final Set<Cell> D2R1 = new HashSet<>() {{
        add(new Cell(new int[]{-1, -1}));
        add(new Cell(new int[]{-1, 0}));
        add(new Cell(new int[]{-1, 1}));
        add(new Cell(new int[]{0, 1}));
        add(new Cell(new int[]{1, 1}));
        add(new Cell(new int[]{1, 0}));
        add(new Cell(new int[]{1, -1}));
        add(new Cell(new int[]{0, -1}));
    }};

    public static final Set<Cell> D3R1 = new HashSet<>() {{
        add(new Cell(new int[]{-1, -1, 1}));
        add(new Cell(new int[]{1, -1, -1}));
        add(new Cell(new int[]{1, 1, 1}));
        add(new Cell(new int[]{0, -1, 0}));
        add(new Cell(new int[]{1, -1, 0}));
        add(new Cell(new int[]{0, -1, 1}));
        add(new Cell(new int[]{1, -1, 1}));
        add(new Cell(new int[]{-1, 0, -1}));
        add(new Cell(new int[]{-1, 0, 0}));
        add(new Cell(new int[]{0, 0, -1}));
        add(new Cell(new int[]{1, 0, -1}));
        add(new Cell(new int[]{-1, 0, 1}));
        add(new Cell(new int[]{1, 0, 0}));
        add(new Cell(new int[]{0, 0, 1}));
        add(new Cell(new int[]{1, 0, 1}));
        add(new Cell(new int[]{-1, 1, -1}));
        add(new Cell(new int[]{-1, 1, 0}));
        add(new Cell(new int[]{0, 1, -1}));
        add(new Cell(new int[]{-1, -1, -1}));
        add(new Cell(new int[]{-1, 1, 1}));
        add(new Cell(new int[]{1, 1, -1}));
        add(new Cell(new int[]{0, 1, 0}));
        add(new Cell(new int[]{-1, -1, 0}));
        add(new Cell(new int[]{1, 1, 0}));
        add(new Cell(new int[]{0, 1, 1}));
        add(new Cell(new int[]{0, -1, -1}));
    }};

    public static final Set<Cell> D4R1 = new HashSet<>() {{
        add(new Cell(new int[]{-1, 0, -1, 1}));
        add(new Cell(new int[]{-1, -1, 1, 1}));
        add(new Cell(new int[]{-1, 1, 1, -1}));
        add(new Cell(new int[]{1, 1, -1, 0}));
        add(new Cell(new int[]{0, 0, 0, 1}));
        add(new Cell(new int[]{-1, -1, 1, 0}));
        add(new Cell(new int[]{1, 1, -1, 1}));
        add(new Cell(new int[]{-1, 0, -1, 0}));
        add(new Cell(new int[]{-1, 1, 1, 1}));
        add(new Cell(new int[]{1, -1, -1, 0}));
        add(new Cell(new int[]{1, 0, 1, 1}));
        add(new Cell(new int[]{0, 0, 0, -1}));
        add(new Cell(new int[]{-1, 0, -1, -1}));
        add(new Cell(new int[]{-1, 1, 1, 0}));
        add(new Cell(new int[]{1, -1, -1, 1}));
        add(new Cell(new int[]{1, 1, -1, -1}));
        add(new Cell(new int[]{1, -1, 0, -1}));
        add(new Cell(new int[]{1, -1, 0, 0}));
        add(new Cell(new int[]{0, 0, 1, -1}));
        add(new Cell(new int[]{0, 1, -1, 1}));
        add(new Cell(new int[]{-1, 0, 0, -1}));
        add(new Cell(new int[]{1, 1, 0, 1}));
        add(new Cell(new int[]{0, -1, -1, 1}));
        add(new Cell(new int[]{0, 1, -1, -1}));
        add(new Cell(new int[]{0, 1, -1, 0}));
        add(new Cell(new int[]{-1, 0, 0, 1}));
        add(new Cell(new int[]{1, -1, 0, 1}));
        add(new Cell(new int[]{1, 1, 0, -1}));
        add(new Cell(new int[]{0, -1, -1, -1}));
        add(new Cell(new int[]{0, 0, 1, 0}));
        add(new Cell(new int[]{-1, 0, 0, 0}));
        add(new Cell(new int[]{1, 1, 0, 0}));
        add(new Cell(new int[]{0, -1, -1, 0}));
        add(new Cell(new int[]{0, 0, 1, 1}));
        add(new Cell(new int[]{1, -1, 1, 0}));
        add(new Cell(new int[]{1, -1, 1, 1}));
        add(new Cell(new int[]{1, 1, 1, -1}));
        add(new Cell(new int[]{0, -1, 0, -1}));
        add(new Cell(new int[]{1, -1, 1, -1}));
        add(new Cell(new int[]{-1, 1, -1, 1}));
        add(new Cell(new int[]{-1, 1, -1, 0}));
        add(new Cell(new int[]{1, 0, -1, 1}));
        add(new Cell(new int[]{-1, -1, -1, -1}));
        add(new Cell(new int[]{-1, 0, 1, 0}));
        add(new Cell(new int[]{0, 1, 0, 0}));
        add(new Cell(new int[]{-1, 0, 1, -1}));
        add(new Cell(new int[]{0, 1, 0, 1}));
        add(new Cell(new int[]{1, 0, -1, -1}));
        add(new Cell(new int[]{1, 1, 1, 0}));
        add(new Cell(new int[]{-1, -1, -1, 1}));
        add(new Cell(new int[]{-1, 1, -1, -1}));
        add(new Cell(new int[]{0, -1, 0, 0}));
        add(new Cell(new int[]{1, 0, -1, 0}));
        add(new Cell(new int[]{1, 1, 1, 1}));
        add(new Cell(new int[]{-1, -1, -1, 0}));
        add(new Cell(new int[]{-1, 0, 1, 1}));
        add(new Cell(new int[]{0, -1, 0, 1}));
        add(new Cell(new int[]{0, 1, 0, -1}));
        add(new Cell(new int[]{0, -1, 1, -1}));
        add(new Cell(new int[]{1, 0, 0, -1}));
        add(new Cell(new int[]{0, -1, 1, 0}));
        add(new Cell(new int[]{-1, 1, 0, 1}));
        add(new Cell(new int[]{-1, -1, 0, 0}));
        add(new Cell(new int[]{0, 1, 1, 1}));
        add(new Cell(new int[]{0, 0, -1, 0}));
        add(new Cell(new int[]{-1, -1, 0, -1}));
        add(new Cell(new int[]{0, 0, -1, 1}));
        add(new Cell(new int[]{1, 0, 0, 0}));
        add(new Cell(new int[]{-1, 1, 0, 0}));
        add(new Cell(new int[]{0, 1, 1, -1}));
        add(new Cell(new int[]{0, -1, 1, 1}));
        add(new Cell(new int[]{1, 0, 0, 1}));
        add(new Cell(new int[]{-1, -1, 0, 1}));
        add(new Cell(new int[]{-1, 1, 0, -1}));
        add(new Cell(new int[]{0, 1, 1, 0}));
        add(new Cell(new int[]{0, 0, -1, -1}));
        add(new Cell(new int[]{1, 0, 1, -1}));
        add(new Cell(new int[]{1, -1, -1, -1}));
        add(new Cell(new int[]{1, 0, 1, 0}));
        add(new Cell(new int[]{-1, -1, 1, -1}));
    }};
    public static final Set<Cell> D5R1 = new HashSet() {{
        add(new Cell(new int[]{1, -1, 0, 0, 1}));
        add(new Cell(new int[]{1, 0, 1, -1, 0}));
        add(new Cell(new int[]{1, 0, 1, -1, 1}));
        add(new Cell(new int[]{1, -1, 0, 0, -1}));
        add(new Cell(new int[]{1, -1, 0, 0, 0}));
        add(new Cell(new int[]{1, 0, 1, -1, -1}));
        add(new Cell(new int[]{-1, 1, -1, 0, 1}));
        add(new Cell(new int[]{-1, 1, -1, 0, 0}));
        add(new Cell(new int[]{-1, 1, -1, 0, -1}));
        add(new Cell(new int[]{1, -1, 0, 1, -1}));
        add(new Cell(new int[]{1, -1, -1, -1, 1}));
        add(new Cell(new int[]{1, 0, 1, 0, 1}));
        add(new Cell(new int[]{1, -1, -1, -1, -1}));
        add(new Cell(new int[]{1, -1, 0, 1, 0}));
        add(new Cell(new int[]{1, 0, 1, 0, -1}));
        add(new Cell(new int[]{1, -1, -1, -1, 0}));
        add(new Cell(new int[]{1, -1, 0, 1, 1}));
        add(new Cell(new int[]{1, 0, 1, 0, 0}));
        add(new Cell(new int[]{-1, 1, -1, -1, 1}));
        add(new Cell(new int[]{-1, 1, -1, -1, 0}));
        add(new Cell(new int[]{-1, 1, 0, 1, 1}));
        add(new Cell(new int[]{-1, 1, -1, -1, -1}));
        add(new Cell(new int[]{-1, 1, 0, 1, 0}));
        add(new Cell(new int[]{-1, 1, 0, 1, -1}));
        add(new Cell(new int[]{1, -1, -1, 0, -1}));
        add(new Cell(new int[]{1, 0, 1, 1, -1}));
        add(new Cell(new int[]{1, -1, 1, 0, 0}));
        add(new Cell(new int[]{1, -1, 1, 0, 1}));
        add(new Cell(new int[]{1, -1, 1, 0, -1}));
        add(new Cell(new int[]{0, -1, 1, -1, -1}));
        add(new Cell(new int[]{0, -1, 1, -1, 0}));
        add(new Cell(new int[]{0, -1, 1, -1, 1}));
        add(new Cell(new int[]{1, -1, 0, -1, 0}));
        add(new Cell(new int[]{1, -1, 1, 1, 1}));
        add(new Cell(new int[]{1, -1, 0, -1, 1}));
        add(new Cell(new int[]{1, -1, 1, 1, -1}));
        add(new Cell(new int[]{1, -1, 0, -1, -1}));
        add(new Cell(new int[]{1, -1, 1, 1, 0}));
        add(new Cell(new int[]{-1, 1, -1, 1, 1}));
        add(new Cell(new int[]{-1, 1, -1, 1, 0}));
        add(new Cell(new int[]{-1, 1, -1, 1, -1}));
        add(new Cell(new int[]{-1, 1, 1, -1, 1}));
        add(new Cell(new int[]{0, 1, -1, 0, 0}));
        add(new Cell(new int[]{0, 1, -1, 0, -1}));
        add(new Cell(new int[]{0, 1, -1, 0, 1}));
        add(new Cell(new int[]{-1, 0, -1, -1, 0}));
        add(new Cell(new int[]{-1, 0, 0, 1, 1}));
        add(new Cell(new int[]{-1, 1, 1, 0, 1}));
        add(new Cell(new int[]{-1, 0, -1, -1, 1}));
        add(new Cell(new int[]{-1, 1, 1, 0, 0}));
        add(new Cell(new int[]{-1, 0, 0, 1, -1}));
        add(new Cell(new int[]{-1, 1, 1, 0, -1}));
        add(new Cell(new int[]{-1, 0, -1, -1, -1}));
        add(new Cell(new int[]{-1, 0, 0, 1, 0}));
        add(new Cell(new int[]{1, -1, 1, -1, -1}));
        add(new Cell(new int[]{1, -1, 1, -1, 0}));
        add(new Cell(new int[]{1, -1, 1, -1, 1}));
        add(new Cell(new int[]{-1, 0, 0, -1, 1}));
        add(new Cell(new int[]{0, 1, -1, -1, -1}));
        add(new Cell(new int[]{0, 1, 0, 1, 0}));
        add(new Cell(new int[]{0, 1, 0, 1, -1}));
        add(new Cell(new int[]{0, 1, -1, -1, 1}));
        add(new Cell(new int[]{0, 1, -1, -1, 0}));
        add(new Cell(new int[]{0, 1, 0, 1, 1}));
        add(new Cell(new int[]{-1, -1, -1, 1, 1}));
        add(new Cell(new int[]{-1, 0, 0, 0, 0}));
        add(new Cell(new int[]{-1, 1, 1, -1, 0}));
        add(new Cell(new int[]{-1, 0, 0, 0, 1}));
        add(new Cell(new int[]{-1, 1, 1, -1, -1}));
        add(new Cell(new int[]{-1, -1, -1, 1, -1}));
        add(new Cell(new int[]{-1, -1, -1, 1, 0}));
        add(new Cell(new int[]{-1, 0, 0, 0, -1}));
        add(new Cell(new int[]{-1, 1, 0, 0, 1}));
        add(new Cell(new int[]{-1, 0, -1, 1, 0}));
        add(new Cell(new int[]{-1, 1, 0, 0, 0}));
        add(new Cell(new int[]{-1, 0, -1, 1, 1}));
        add(new Cell(new int[]{-1, 1, 0, 0, -1}));
        add(new Cell(new int[]{-1, 0, -1, 1, -1}));
        add(new Cell(new int[]{0, 1, -1, 1, 1}));
        add(new Cell(new int[]{0, 1, -1, 1, 0}));
        add(new Cell(new int[]{0, 1, -1, 1, -1}));
        add(new Cell(new int[]{-1, 0, -1, 0, 1}));
        add(new Cell(new int[]{-1, 1, 0, -1, 1}));
        add(new Cell(new int[]{-1, 1, 0, -1, 0}));
        add(new Cell(new int[]{-1, 1, 1, 1, 1}));
        add(new Cell(new int[]{-1, 0, -1, 0, -1}));
        add(new Cell(new int[]{-1, 1, 0, -1, -1}));
        add(new Cell(new int[]{-1, 1, 1, 1, 0}));
        add(new Cell(new int[]{-1, 0, -1, 0, 0}));
        add(new Cell(new int[]{-1, 1, 1, 1, -1}));
        add(new Cell(new int[]{-1, -1, 0, -1, 0}));
        add(new Cell(new int[]{-1, -1, 1, 1, 1}));
        add(new Cell(new int[]{-1, -1, 0, -1, 1}));
        add(new Cell(new int[]{0, 0, 0, 1, -1}));
        add(new Cell(new int[]{0, 1, 1, 0, 0}));
        add(new Cell(new int[]{0, 0, -1, -1, -1}));
        add(new Cell(new int[]{0, 0, 0, 1, 0}));
        add(new Cell(new int[]{0, 1, 1, 0, -1}));
        add(new Cell(new int[]{0, 0, -1, -1, 0}));
        add(new Cell(new int[]{0, 0, 0, 1, 1}));
        add(new Cell(new int[]{0, 1, 1, -1, 1}));
        add(new Cell(new int[]{0, 0, 0, 0, 1}));
        add(new Cell(new int[]{0, 1, 1, -1, 0}));
        add(new Cell(new int[]{-1, -1, 0, 0, -1}));
        add(new Cell(new int[]{-1, -1, 0, 0, 0}));
        add(new Cell(new int[]{-1, 0, 1, -1, -1}));
        add(new Cell(new int[]{1, 1, -1, 1, 1}));
        add(new Cell(new int[]{1, 1, -1, 1, 0}));
        add(new Cell(new int[]{1, 1, -1, 1, -1}));
        add(new Cell(new int[]{-1, -1, 1, 0, 0}));
        add(new Cell(new int[]{-1, -1, 1, 0, 1}));
        add(new Cell(new int[]{0, -1, -1, 1, -1}));
        add(new Cell(new int[]{0, 1, 1, -1, -1}));
        add(new Cell(new int[]{0, -1, -1, 1, 0}));
        add(new Cell(new int[]{0, 0, 0, 0, -1}));
        add(new Cell(new int[]{0, -1, -1, 1, 1}));
        add(new Cell(new int[]{0, -1, -1, 0, 1}));
        add(new Cell(new int[]{0, 0, 1, 1, 1}));
        add(new Cell(new int[]{0, 0, 0, -1, 0}));
        add(new Cell(new int[]{0, 0, 0, -1, 1}));
        add(new Cell(new int[]{-1, -1, 1, 1, -1}));
        add(new Cell(new int[]{-1, -1, 0, -1, -1}));
        add(new Cell(new int[]{-1, -1, 1, 1, 0}));
        add(new Cell(new int[]{1, 1, 0, 0, 1}));
        add(new Cell(new int[]{-1, -1, -1, -1, 1}));
        add(new Cell(new int[]{-1, 0, 1, 0, 1}));
        add(new Cell(new int[]{0, 1, 0, 0, -1}));
        add(new Cell(new int[]{0, 0, -1, 1, -1}));
        add(new Cell(new int[]{0, 0, -1, 1, 0}));
        add(new Cell(new int[]{0, 1, 0, 0, 1}));
        add(new Cell(new int[]{0, 0, -1, 1, 1}));
        add(new Cell(new int[]{0, 1, 0, 0, 0}));
        add(new Cell(new int[]{0, 1, 0, -1, 1}));
        add(new Cell(new int[]{-1, -1, -1, 0, 0}));
        add(new Cell(new int[]{-1, 0, 0, -1, -1}));
        add(new Cell(new int[]{-1, 0, 1, 1, 0}));
        add(new Cell(new int[]{-1, -1, -1, 0, 1}));
        add(new Cell(new int[]{-1, 0, 0, -1, 0}));
        add(new Cell(new int[]{-1, 0, 1, 1, 1}));
        add(new Cell(new int[]{-1, -1, -1, 0, -1}));
        add(new Cell(new int[]{-1, 0, 1, 1, -1}));
        add(new Cell(new int[]{1, 1, -1, -1, 0}));
        add(new Cell(new int[]{1, 1, 0, 1, 1}));
        add(new Cell(new int[]{1, 1, -1, -1, -1}));
        add(new Cell(new int[]{1, 1, 0, 1, 0}));
        add(new Cell(new int[]{1, 1, 0, 1, -1}));
        add(new Cell(new int[]{1, 1, -1, -1, 1}));
        add(new Cell(new int[]{-1, -1, 0, 0, 1}));
        add(new Cell(new int[]{-1, 0, 1, -1, 0}));
        add(new Cell(new int[]{-1, 0, 1, -1, 1}));
        add(new Cell(new int[]{0, 1, 1, 1, -1}));
        add(new Cell(new int[]{0, 0, -1, 0, -1}));
        add(new Cell(new int[]{0, 1, 0, -1, 0}));
        add(new Cell(new int[]{0, 1, 1, 1, 1}));
        add(new Cell(new int[]{0, 0, -1, 0, 0}));
        add(new Cell(new int[]{0, 1, 0, -1, -1}));
        add(new Cell(new int[]{0, 1, 1, 1, 0}));
        add(new Cell(new int[]{0, 0, -1, 0, 1}));
        add(new Cell(new int[]{0, 0, -1, -1, 1}));
        add(new Cell(new int[]{0, 1, 1, 0, 1}));
        add(new Cell(new int[]{-1, -1, -1, -1, -1}));
        add(new Cell(new int[]{-1, -1, 0, 1, 0}));
        add(new Cell(new int[]{-1, 0, 1, 0, -1}));
        add(new Cell(new int[]{-1, -1, -1, -1, 0}));
        add(new Cell(new int[]{-1, -1, 0, 1, 1}));
        add(new Cell(new int[]{-1, 0, 1, 0, 0}));
        add(new Cell(new int[]{-1, -1, 0, 1, -1}));
        add(new Cell(new int[]{1, 1, -1, 0, 1}));
        add(new Cell(new int[]{1, 1, -1, 0, 0}));
        add(new Cell(new int[]{1, 1, -1, 0, -1}));
        add(new Cell(new int[]{1, 0, -1, -1, 0}));
        add(new Cell(new int[]{1, 0, 0, 1, 1}));
        add(new Cell(new int[]{1, 1, 1, 0, 1}));
        add(new Cell(new int[]{1, 0, -1, -1, 1}));
        add(new Cell(new int[]{1, 1, 1, 0, 0}));
        add(new Cell(new int[]{0, -1, 0, 0, -1}));
        add(new Cell(new int[]{0, -1, 0, -1, -1}));
        add(new Cell(new int[]{0, -1, 1, 1, 0}));
        add(new Cell(new int[]{0, -1, 0, -1, 0}));
        add(new Cell(new int[]{0, -1, 1, 1, 1}));
        add(new Cell(new int[]{0, -1, 0, -1, 1}));
        add(new Cell(new int[]{1, 0, -1, 0, -1}));
        add(new Cell(new int[]{1, 1, 0, -1, -1}));
        add(new Cell(new int[]{1, 1, 1, 1, 0}));
        add(new Cell(new int[]{1, 0, -1, 0, 0}));
        add(new Cell(new int[]{1, 1, 1, 1, -1}));
        add(new Cell(new int[]{1, 0, -1, 0, 1}));
        add(new Cell(new int[]{1, 1, 0, -1, 1}));
        add(new Cell(new int[]{1, 1, 0, -1, 0}));
        add(new Cell(new int[]{1, 1, 1, 1, 1}));
        add(new Cell(new int[]{0, -1, 1, 1, -1}));
        add(new Cell(new int[]{0, -1, 1, 0, -1}));
        add(new Cell(new int[]{0, -1, 1, 0, 0}));
        add(new Cell(new int[]{0, -1, 1, 0, 1}));
        add(new Cell(new int[]{1, 0, -1, 1, 0}));
        add(new Cell(new int[]{1, 1, 0, 0, 0}));
        add(new Cell(new int[]{1, 0, -1, 1, 1}));
        add(new Cell(new int[]{1, 1, 0, 0, -1}));
        add(new Cell(new int[]{1, 0, -1, 1, -1}));
        add(new Cell(new int[]{1, 0, 0, -1, 1}));
        add(new Cell(new int[]{1, -1, -1, 0, 0}));
        add(new Cell(new int[]{1, 0, 0, -1, -1}));
        add(new Cell(new int[]{1, 0, 1, 1, 0}));
        add(new Cell(new int[]{1, -1, -1, 0, 1}));
        add(new Cell(new int[]{1, 0, 0, -1, 0}));
        add(new Cell(new int[]{1, 0, 1, 1, 1}));
        add(new Cell(new int[]{-1, -1, 1, -1, 1}));
        add(new Cell(new int[]{-1, -1, 1, -1, -1}));
        add(new Cell(new int[]{-1, -1, 1, -1, 0}));
        add(new Cell(new int[]{0, -1, -1, 0, -1}));
        add(new Cell(new int[]{0, 0, 1, 1, -1}));
        add(new Cell(new int[]{0, -1, -1, 0, 0}));
        add(new Cell(new int[]{0, 0, 1, 1, 0}));
        add(new Cell(new int[]{0, 0, 0, -1, -1}));
        add(new Cell(new int[]{0, -1, -1, -1, 0}));
        add(new Cell(new int[]{0, -1, 0, 1, 1}));
        add(new Cell(new int[]{0, 0, 1, 0, 0}));
        add(new Cell(new int[]{0, -1, -1, -1, 1}));
        add(new Cell(new int[]{0, 0, 1, 0, 1}));
        add(new Cell(new int[]{-1, -1, 1, 0, -1}));
        add(new Cell(new int[]{1, -1, -1, 1, -1}));
        add(new Cell(new int[]{1, -1, -1, 1, 0}));
        add(new Cell(new int[]{1, 0, 0, 0, -1}));
        add(new Cell(new int[]{1, 1, 1, -1, 1}));
        add(new Cell(new int[]{1, -1, -1, 1, 1}));
        add(new Cell(new int[]{1, 0, 0, 0, 0}));
        add(new Cell(new int[]{1, 1, 1, -1, 0}));
        add(new Cell(new int[]{1, 0, 0, 0, 1}));
        add(new Cell(new int[]{1, 1, 1, -1, -1}));
        add(new Cell(new int[]{0, -1, 0, 1, -1}));
        add(new Cell(new int[]{0, -1, -1, -1, -1}));
        add(new Cell(new int[]{0, -1, 0, 1, 0}));
        add(new Cell(new int[]{0, 0, 1, 0, -1}));
        add(new Cell(new int[]{0, -1, 0, 0, 0}));
        add(new Cell(new int[]{0, 0, 1, -1, -1}));
        add(new Cell(new int[]{0, -1, 0, 0, 1}));
        add(new Cell(new int[]{0, 0, 1, -1, 0}));
        add(new Cell(new int[]{0, 0, 1, -1, 1}));
        add(new Cell(new int[]{1, 0, 0, 1, -1}));
        add(new Cell(new int[]{1, 1, 1, 0, -1}));
        add(new Cell(new int[]{1, 0, -1, -1, -1}));
        add(new Cell(new int[]{1, 0, 0, 1, 0}));
    }};

    public static final Set<Cell> D6R1 = new HashSet() {{
        add(new Cell(new int[]{-1, -1, 1, 1, -1, 1}));
        add(new Cell(new int[]{-1, -1, 0, 0, 0, 1}));
        add(new Cell(new int[]{-1, -1, 1, 1, -1, 0}));
        add(new Cell(new int[]{-1, -1, -1, -1, 1, 0}));
        add(new Cell(new int[]{-1, -1, 0, 0, 0, 0}));
        add(new Cell(new int[]{-1, -1, 1, 1, -1, -1}));
        add(new Cell(new int[]{-1, -1, -1, -1, 1, 1}));
        add(new Cell(new int[]{-1, -1, 0, 0, 0, -1}));
        add(new Cell(new int[]{1, 1, -1, 1, -1, -1}));
        add(new Cell(new int[]{1, 1, -1, 1, -1, 0}));
        add(new Cell(new int[]{1, 1, -1, 1, -1, 1}));
        add(new Cell(new int[]{-1, 0, 1, -1, 0, -1}));
        add(new Cell(new int[]{-1, 0, 1, -1, -1, 0}));
        add(new Cell(new int[]{-1, 0, 1, 0, 1, 1}));
        add(new Cell(new int[]{-1, 0, 1, -1, -1, -1}));
        add(new Cell(new int[]{-1, 0, 1, 0, 1, 0}));
        add(new Cell(new int[]{-1, 0, 1, -1, -1, 1}));
        add(new Cell(new int[]{-1, -1, 0, 0, 1, -1}));
        add(new Cell(new int[]{-1, -1, -1, -1, 0, 1}));
        add(new Cell(new int[]{-1, -1, 0, 0, -1, 1}));
        add(new Cell(new int[]{-1, -1, 0, 0, -1, 0}));
        add(new Cell(new int[]{-1, -1, 0, 1, 1, 1}));
        add(new Cell(new int[]{-1, -1, -1, -1, 0, -1}));
        add(new Cell(new int[]{-1, -1, 0, 0, -1, -1}));
        add(new Cell(new int[]{-1, -1, 0, 1, 1, 0}));
        add(new Cell(new int[]{-1, -1, -1, -1, 0, 0}));
        add(new Cell(new int[]{-1, -1, 0, 1, 1, -1}));
        add(new Cell(new int[]{-1, 0, 1, 0, 1, -1}));
        add(new Cell(new int[]{-1, 0, 0, -1, 1, 1}));
        add(new Cell(new int[]{-1, 0, 1, 0, 0, 0}));
        add(new Cell(new int[]{-1, 0, 0, -1, 1, 0}));
        add(new Cell(new int[]{-1, 0, 1, 0, 0, -1}));
        add(new Cell(new int[]{-1, 0, 1, 0, 0, 1}));
        add(new Cell(new int[]{-1, -1, -1, -1, 1, -1}));
        add(new Cell(new int[]{-1, -1, 1, 0, -1, 1}));
        add(new Cell(new int[]{-1, -1, 0, -1, 0, 1}));
        add(new Cell(new int[]{-1, -1, 1, 0, -1, 0}));
        add(new Cell(new int[]{-1, -1, 1, 1, 1, 1}));
        add(new Cell(new int[]{-1, -1, 0, -1, 0, 0}));
        add(new Cell(new int[]{-1, -1, 1, 0, -1, -1}));
        add(new Cell(new int[]{-1, -1, 1, 1, 1, 0}));
        add(new Cell(new int[]{1, 1, -1, 1, 1, -1}));
        add(new Cell(new int[]{1, 1, -1, 0, -1, -1}));
        add(new Cell(new int[]{1, 1, -1, 1, 1, 0}));
        add(new Cell(new int[]{1, 1, -1, 0, -1, 0}));
        add(new Cell(new int[]{1, 1, -1, 1, 1, 1}));
        add(new Cell(new int[]{1, 1, -1, 0, -1, 1}));
        add(new Cell(new int[]{-1, 0, 1, -1, 1, 1}));
        add(new Cell(new int[]{-1, -1, 0, -1, 1, 0}));
        add(new Cell(new int[]{-1, -1, 1, 0, 0, -1}));
        add(new Cell(new int[]{-1, -1, 0, -1, 1, -1}));
        add(new Cell(new int[]{-1, -1, 0, -1, -1, 1}));
        add(new Cell(new int[]{-1, -1, 1, 1, 0, 1}));
        add(new Cell(new int[]{-1, -1, 0, -1, -1, 0}));
        add(new Cell(new int[]{-1, -1, 0, 0, 1, 1}));
        add(new Cell(new int[]{-1, -1, 1, 1, 0, 0}));
        add(new Cell(new int[]{-1, -1, 0, -1, -1, -1}));
        add(new Cell(new int[]{-1, -1, 0, 0, 1, 0}));
        add(new Cell(new int[]{-1, -1, 1, 1, 0, -1}));
        add(new Cell(new int[]{1, 1, -1, 1, 0, -1}));
        add(new Cell(new int[]{1, 1, -1, 1, 0, 0}));
        add(new Cell(new int[]{1, 1, -1, 1, 0, 1}));
        add(new Cell(new int[]{-1, 0, 1, -1, 1, 0}));
        add(new Cell(new int[]{-1, 0, 1, -1, 1, -1}));
        add(new Cell(new int[]{-1, 0, 1, -1, 0, 1}));
        add(new Cell(new int[]{-1, 0, 1, -1, 0, 0}));
        add(new Cell(new int[]{-1, -1, 0, -1, 0, -1}));
        add(new Cell(new int[]{-1, -1, 1, 1, 1, -1}));
        add(new Cell(new int[]{-1, -1, 1, -1, -1, 1}));
        add(new Cell(new int[]{-1, -1, 1, -1, -1, 0}));
        add(new Cell(new int[]{-1, -1, 1, 0, 1, 1}));
        add(new Cell(new int[]{0, -1, 1, -1, 0, -1}));
        add(new Cell(new int[]{0, -1, 1, -1, 0, 0}));
        add(new Cell(new int[]{0, -1, 1, -1, 0, 1}));
        add(new Cell(new int[]{0, -1, 1, -1, -1, 1}));
        add(new Cell(new int[]{-1, -1, 1, -1, 0, 0}));
        add(new Cell(new int[]{-1, -1, 1, -1, 0, -1}));
        add(new Cell(new int[]{-1, -1, 1, 0, 0, 1}));
        add(new Cell(new int[]{-1, -1, 0, -1, 1, 1}));
        add(new Cell(new int[]{-1, -1, 1, 0, 0, 0}));
        add(new Cell(new int[]{0, -1, 1, -1, 1, -1}));
        add(new Cell(new int[]{0, -1, 1, -1, 1, 0}));
        add(new Cell(new int[]{0, -1, 1, -1, 1, 1}));
        add(new Cell(new int[]{-1, -1, 1, -1, -1, -1}));
        add(new Cell(new int[]{-1, -1, 1, 0, 1, 0}));
        add(new Cell(new int[]{-1, -1, 1, 0, 1, -1}));
        add(new Cell(new int[]{0, -1, 0, -1, 1, -1}));
        add(new Cell(new int[]{0, -1, 0, -1, 1, 0}));
        add(new Cell(new int[]{0, -1, 1, 0, 0, -1}));
        add(new Cell(new int[]{0, -1, 0, -1, 1, 1}));
        add(new Cell(new int[]{0, -1, 1, 0, 0, 0}));
        add(new Cell(new int[]{0, -1, 0, -1, 0, 1}));
        add(new Cell(new int[]{0, -1, 1, 0, -1, 0}));
        add(new Cell(new int[]{0, -1, 1, 1, 1, 1}));
        add(new Cell(new int[]{0, -1, 1, 0, -1, 1}));
        add(new Cell(new int[]{-1, -1, 1, -1, 0, 1}));
        add(new Cell(new int[]{0, -1, 1, 0, 1, -1}));
        add(new Cell(new int[]{0, -1, 1, -1, -1, -1}));
        add(new Cell(new int[]{0, -1, 1, 0, 1, 0}));
        add(new Cell(new int[]{0, -1, 1, -1, -1, 0}));
        add(new Cell(new int[]{0, -1, 1, 0, 1, 1}));
        add(new Cell(new int[]{0, -1, 1, 0, 0, 1}));
        add(new Cell(new int[]{-1, -1, 1, -1, 1, 1}));
        add(new Cell(new int[]{-1, -1, 1, -1, 1, 0}));
        add(new Cell(new int[]{-1, -1, 1, -1, 1, -1}));
        add(new Cell(new int[]{1, 0, -1, 0, 1, -1}));
        add(new Cell(new int[]{1, 1, 0, -1, 0, 1}));
        add(new Cell(new int[]{1, 1, 1, 0, -1, 0}));
        add(new Cell(new int[]{1, 1, 1, 1, 1, 1}));
        add(new Cell(new int[]{1, 1, 0, -1, 0, 0}));
        add(new Cell(new int[]{1, 1, 1, 0, -1, -1}));
        add(new Cell(new int[]{1, 1, 1, 1, 1, 0}));
        add(new Cell(new int[]{1, 1, 1, 0, -1, 1}));
        add(new Cell(new int[]{-1, 0, -1, 1, 1, -1}));
        add(new Cell(new int[]{-1, 0, -1, 0, -1, -1}));
        add(new Cell(new int[]{-1, 0, -1, 1, 1, 0}));
        add(new Cell(new int[]{-1, 0, -1, 0, -1, 0}));
        add(new Cell(new int[]{-1, 0, -1, 1, 1, 1}));
        add(new Cell(new int[]{-1, 0, -1, 0, -1, 1}));
        add(new Cell(new int[]{1, 1, 0, -1, 1, 0}));
        add(new Cell(new int[]{1, 1, 1, 0, 0, -1}));
        add(new Cell(new int[]{1, 1, 0, -1, 1, -1}));
        add(new Cell(new int[]{1, 0, -1, 0, 0, 1}));
        add(new Cell(new int[]{1, 0, 0, 1, -1, 1}));
        add(new Cell(new int[]{1, 0, 0, 1, -1, 0}));
        add(new Cell(new int[]{-1, 1, 1, 1, -1, 1}));
        add(new Cell(new int[]{1, 0, -1, 0, 0, -1}));
        add(new Cell(new int[]{1, 0, 0, 1, -1, -1}));
        add(new Cell(new int[]{-1, 1, 0, 0, 0, 1}));
        add(new Cell(new int[]{-1, 1, 1, 1, -1, 0}));
        add(new Cell(new int[]{1, 0, -1, 0, 0, 0}));
        add(new Cell(new int[]{-1, 1, -1, -1, 1, 1}));
        add(new Cell(new int[]{-1, 1, 0, 0, 0, 0}));
        add(new Cell(new int[]{-1, 1, 1, 1, -1, -1}));
        add(new Cell(new int[]{-1, 1, -1, -1, 1, 0}));
        add(new Cell(new int[]{-1, 1, 0, 0, 0, -1}));
        add(new Cell(new int[]{-1, 1, -1, -1, 1, -1}));
        add(new Cell(new int[]{1, 0, 0, 1, 1, -1}));
        add(new Cell(new int[]{1, 0, -1, -1, 0, -1}));
        add(new Cell(new int[]{1, 1, 0, -1, -1, 0}));
        add(new Cell(new int[]{1, 1, 0, 0, 1, 1}));
        add(new Cell(new int[]{1, 1, 1, 1, 0, 0}));
        add(new Cell(new int[]{1, 1, 0, -1, -1, -1}));
        add(new Cell(new int[]{1, 1, 0, 0, 1, 0}));
        add(new Cell(new int[]{1, 1, 1, 1, 0, -1}));
        add(new Cell(new int[]{1, 1, 0, -1, -1, 1}));
        add(new Cell(new int[]{1, 1, 1, 1, 0, 1}));
        add(new Cell(new int[]{1, -1, -1, 1, -1, -1}));
        add(new Cell(new int[]{1, -1, -1, 1, -1, 0}));
        add(new Cell(new int[]{1, -1, -1, 1, -1, 1}));
        add(new Cell(new int[]{-1, 0, -1, 1, 0, -1}));
        add(new Cell(new int[]{-1, 0, -1, 1, 0, 0}));
        add(new Cell(new int[]{-1, 0, -1, 1, 0, 1}));
        add(new Cell(new int[]{1, 1, 0, -1, 0, -1}));
        add(new Cell(new int[]{1, 1, 1, 1, 1, -1}));
        add(new Cell(new int[]{1, 0, -1, -1, -1, 1}));
        add(new Cell(new int[]{1, 0, 0, 1, 0, 1}));
        add(new Cell(new int[]{-1, 1, 0, 0, -1, 1}));
        add(new Cell(new int[]{1, 0, -1, -1, -1, -1}));
        add(new Cell(new int[]{1, 0, -1, 0, 1, 0}));
        add(new Cell(new int[]{1, 0, 0, 1, 0, 0}));
        add(new Cell(new int[]{-1, 1, -1, -1, 0, 1}));
        add(new Cell(new int[]{-1, 1, 0, 0, -1, 0}));
        add(new Cell(new int[]{-1, 1, 0, 1, 1, 1}));
        add(new Cell(new int[]{1, 0, -1, -1, -1, 0}));
        add(new Cell(new int[]{1, 0, -1, 0, 1, 1}));
        add(new Cell(new int[]{1, 0, 0, 1, 0, -1}));
        add(new Cell(new int[]{-1, 1, -1, -1, 0, 0}));
        add(new Cell(new int[]{-1, 1, 0, 0, -1, -1}));
        add(new Cell(new int[]{-1, 1, 0, 1, 1, 0}));
        add(new Cell(new int[]{-1, 1, -1, -1, 0, -1}));
        add(new Cell(new int[]{-1, 1, 0, 1, 1, -1}));
        add(new Cell(new int[]{-1, -1, -1, 1, -1, -1}));
        add(new Cell(new int[]{1, 0, -1, -1, 1, -1}));
        add(new Cell(new int[]{1, 0, 0, 0, 0, -1}));
        add(new Cell(new int[]{1, 0, -1, -1, 1, 0}));
        add(new Cell(new int[]{-1, -1, -1, 1, -1, 0}));
        add(new Cell(new int[]{-1, -1, -1, 1, -1, 1}));
        add(new Cell(new int[]{1, 1, 1, -1, -1, 1}));
        add(new Cell(new int[]{1, 1, 1, -1, -1, 0}));
        add(new Cell(new int[]{1, 1, 1, 0, 1, 1}));
        add(new Cell(new int[]{1, -1, -1, 1, 0, -1}));
        add(new Cell(new int[]{1, -1, -1, 1, 0, 0}));
        add(new Cell(new int[]{1, -1, -1, 1, 0, 1}));
        add(new Cell(new int[]{-1, 0, -1, 0, 1, -1}));
        add(new Cell(new int[]{-1, 0, -1, -1, -1, -1}));
        add(new Cell(new int[]{-1, 0, -1, 0, 1, 0}));
        add(new Cell(new int[]{-1, 0, 0, 1, 0, 0}));
        add(new Cell(new int[]{-1, 0, -1, -1, -1, 0}));
        add(new Cell(new int[]{-1, 0, -1, 0, 1, 1}));
        add(new Cell(new int[]{-1, 0, 0, 1, 0, -1}));
        add(new Cell(new int[]{1, -1, -1, 1, 1, -1}));
        add(new Cell(new int[]{-1, 0, -1, -1, -1, 1}));
        add(new Cell(new int[]{-1, 0, 0, 1, 0, 1}));
        add(new Cell(new int[]{1, 1, 1, -1, 0, 0}));
        add(new Cell(new int[]{1, 1, 1, -1, 0, -1}));
        add(new Cell(new int[]{1, 0, 0, 0, -1, 1}));
        add(new Cell(new int[]{1, 0, -1, -1, 0, 0}));
        add(new Cell(new int[]{1, 0, 0, 0, -1, 0}));
        add(new Cell(new int[]{1, 0, 0, 1, 1, 1}));
        add(new Cell(new int[]{-1, 1, 1, 0, -1, 1}));
        add(new Cell(new int[]{1, 0, -1, -1, 0, 1}));
        add(new Cell(new int[]{1, 0, 0, 0, -1, -1}));
        add(new Cell(new int[]{1, 0, 0, 1, 1, 0}));
        add(new Cell(new int[]{-1, 1, 0, -1, 0, 1}));
        add(new Cell(new int[]{-1, 1, 1, 0, -1, 0}));
        add(new Cell(new int[]{-1, 1, 1, 1, 1, 1}));
        add(new Cell(new int[]{-1, 1, 0, -1, 0, 0}));
        add(new Cell(new int[]{-1, 1, 1, 0, -1, -1}));
        add(new Cell(new int[]{-1, 1, 1, 1, 1, 0}));
        add(new Cell(new int[]{-1, 1, 0, -1, 0, -1}));
        add(new Cell(new int[]{-1, 1, 1, 1, 1, -1}));
        add(new Cell(new int[]{1, 0, 0, -1, -1, -1}));
        add(new Cell(new int[]{1, 0, 0, 0, 1, 0}));
        add(new Cell(new int[]{1, 0, 1, 1, 0, -1}));
        add(new Cell(new int[]{1, 0, 0, 0, 1, -1}));
        add(new Cell(new int[]{1, 1, 1, 0, 0, 1}));
        add(new Cell(new int[]{1, 1, 0, -1, 1, 1}));
        add(new Cell(new int[]{1, 1, 1, 0, 0, 0}));
        add(new Cell(new int[]{1, -1, -1, 0, -1, -1}));
        add(new Cell(new int[]{1, -1, -1, 1, 1, 0}));
        add(new Cell(new int[]{1, -1, -1, 0, -1, 0}));
        add(new Cell(new int[]{1, -1, -1, 1, 1, 1}));
        add(new Cell(new int[]{1, -1, -1, 0, -1, 1}));
        add(new Cell(new int[]{-1, 0, -1, 0, 0, -1}));
        add(new Cell(new int[]{-1, 0, 0, 1, -1, -1}));
        add(new Cell(new int[]{-1, 0, -1, 0, 0, 0}));
        add(new Cell(new int[]{1, -1, -1, 0, 0, -1}));
        add(new Cell(new int[]{-1, 0, -1, 0, 0, 1}));
        add(new Cell(new int[]{-1, 0, 0, 1, -1, 1}));
        add(new Cell(new int[]{-1, 0, 0, 1, -1, 0}));
        add(new Cell(new int[]{1, 1, 1, -1, -1, -1}));
        add(new Cell(new int[]{1, 1, 1, 0, 1, 0}));
        add(new Cell(new int[]{1, 1, 1, 0, 1, -1}));
        add(new Cell(new int[]{1, 0, 1, 1, -1, 1}));
        add(new Cell(new int[]{1, 0, -1, -1, 1, 1}));
        add(new Cell(new int[]{1, 0, 0, 0, 0, 1}));
        add(new Cell(new int[]{1, 0, 1, 1, -1, 0}));
        add(new Cell(new int[]{-1, 1, 0, -1, -1, 1}));
        add(new Cell(new int[]{-1, 1, 1, 1, 0, 1}));
        add(new Cell(new int[]{1, 0, 0, 0, 0, 0}));
        add(new Cell(new int[]{1, 0, 1, 1, -1, -1}));
        add(new Cell(new int[]{-1, 1, 0, -1, -1, 0}));
        add(new Cell(new int[]{-1, 1, 0, 0, 1, 1}));
        add(new Cell(new int[]{-1, 1, 1, 1, 0, 0}));
        add(new Cell(new int[]{-1, 1, 0, -1, -1, -1}));
        add(new Cell(new int[]{-1, 1, 0, 0, 1, 0}));
        add(new Cell(new int[]{-1, 1, 1, 1, 0, -1}));
        add(new Cell(new int[]{-1, 1, 0, 0, 1, -1}));
        add(new Cell(new int[]{-1, -1, -1, 0, -1, -1}));
        add(new Cell(new int[]{-1, -1, -1, 1, 1, 0}));
        add(new Cell(new int[]{-1, -1, -1, 0, -1, 0}));
        add(new Cell(new int[]{-1, -1, -1, 1, 1, 1}));
        add(new Cell(new int[]{-1, -1, -1, 1, 1, -1}));
        add(new Cell(new int[]{-1, -1, -1, 0, -1, 1}));
        add(new Cell(new int[]{1, 1, -1, 0, 1, -1}));
        add(new Cell(new int[]{1, 1, 0, 1, 0, -1}));
        add(new Cell(new int[]{1, 1, -1, -1, -1, -1}));
        add(new Cell(new int[]{1, 1, -1, 0, 1, 0}));
        add(new Cell(new int[]{1, 1, -1, -1, -1, 0}));
        add(new Cell(new int[]{1, 1, -1, 0, 1, 1}));
        add(new Cell(new int[]{1, 1, 0, 1, 0, 1}));
        add(new Cell(new int[]{1, 1, -1, -1, -1, 1}));
        add(new Cell(new int[]{1, 1, 0, 1, 0, 0}));
        add(new Cell(new int[]{-1, 0, -1, -1, 1, -1}));
        add(new Cell(new int[]{-1, 0, 0, 0, 0, -1}));
        add(new Cell(new int[]{-1, 0, -1, -1, 1, 0}));
        add(new Cell(new int[]{-1, 0, -1, -1, 1, 1}));
        add(new Cell(new int[]{-1, 0, 0, 0, 0, 1}));
        add(new Cell(new int[]{-1, 0, 1, 1, -1, 0}));
        add(new Cell(new int[]{-1, 0, 0, 0, 0, 0}));
        add(new Cell(new int[]{-1, 0, 1, 1, -1, -1}));
        add(new Cell(new int[]{-1, 0, 1, 1, -1, 1}));
        add(new Cell(new int[]{-1, 1, 1, -1, -1, 1}));
        add(new Cell(new int[]{-1, 1, 1, -1, -1, 0}));
        add(new Cell(new int[]{-1, 1, 1, 0, 1, 1}));
        add(new Cell(new int[]{-1, 1, 1, -1, -1, -1}));
        add(new Cell(new int[]{-1, 1, 1, 0, 1, 0}));
        add(new Cell(new int[]{-1, 1, 1, 0, 1, -1}));
        add(new Cell(new int[]{-1, -1, -1, 1, 0, -1}));
        add(new Cell(new int[]{-1, -1, -1, 1, 0, 0}));
        add(new Cell(new int[]{-1, -1, -1, 1, 0, 1}));
        add(new Cell(new int[]{1, 1, -1, 0, 0, -1}));
        add(new Cell(new int[]{1, 1, -1, 0, 0, 0}));
        add(new Cell(new int[]{1, 1, 0, 1, -1, 0}));
        add(new Cell(new int[]{1, 1, -1, 0, 0, 1}));
        add(new Cell(new int[]{1, 1, 0, 1, -1, -1}));
        add(new Cell(new int[]{1, 1, 0, 1, -1, 1}));
        add(new Cell(new int[]{-1, 0, 0, 1, 1, -1}));
        add(new Cell(new int[]{-1, 0, -1, -1, 0, -1}));
        add(new Cell(new int[]{-1, 0, -1, -1, 0, 0}));
        add(new Cell(new int[]{-1, 0, 0, 0, -1, 0}));
        add(new Cell(new int[]{-1, 0, 0, 1, 1, 1}));
        add(new Cell(new int[]{-1, 0, -1, -1, 0, 1}));
        add(new Cell(new int[]{-1, 0, 0, 0, -1, -1}));
        add(new Cell(new int[]{-1, 0, 0, 1, 1, 0}));
        add(new Cell(new int[]{-1, 0, 0, 0, -1, 1}));
        add(new Cell(new int[]{1, 0, -1, 1, -1, -1}));
        add(new Cell(new int[]{1, 0, -1, 1, -1, 0}));
        add(new Cell(new int[]{-1, 1, 1, 0, 0, 1}));
        add(new Cell(new int[]{-1, 1, 0, -1, 1, 1}));
        add(new Cell(new int[]{-1, 1, 1, 0, 0, 0}));
        add(new Cell(new int[]{-1, 1, 0, -1, 1, 0}));
        add(new Cell(new int[]{-1, 1, 1, 0, 0, -1}));
        add(new Cell(new int[]{1, 0, -1, 1, -1, 1}));
        add(new Cell(new int[]{-1, 1, 0, -1, 1, -1}));
        add(new Cell(new int[]{-1, -1, -1, -1, -1, 0}));
        add(new Cell(new int[]{-1, -1, -1, 0, 1, 1}));
        add(new Cell(new int[]{-1, -1, 0, 1, 0, 1}));
        add(new Cell(new int[]{-1, -1, -1, -1, -1, 1}));
        add(new Cell(new int[]{-1, -1, 0, 1, 0, 0}));
        add(new Cell(new int[]{-1, -1, -1, 0, 1, -1}));
        add(new Cell(new int[]{-1, -1, 0, 1, 0, -1}));
        add(new Cell(new int[]{-1, -1, -1, -1, -1, -1}));
        add(new Cell(new int[]{-1, -1, -1, 0, 1, 0}));
        add(new Cell(new int[]{1, 1, 0, 0, 0, 0}));
        add(new Cell(new int[]{1, 1, 1, 1, -1, -1}));
        add(new Cell(new int[]{1, 1, -1, -1, 1, 0}));
        add(new Cell(new int[]{1, 1, -1, -1, 1, 1}));
        add(new Cell(new int[]{1, 1, 0, 0, 0, -1}));
        add(new Cell(new int[]{1, 1, 1, 1, -1, 1}));
        add(new Cell(new int[]{1, 1, 0, 0, 0, 1}));
        add(new Cell(new int[]{1, 1, 1, 1, -1, 0}));
        add(new Cell(new int[]{-1, 0, 0, -1, 1, -1}));
        add(new Cell(new int[]{-1, 0, 0, -1, 0, 0}));
        add(new Cell(new int[]{-1, 0, 1, 0, -1, -1}));
        add(new Cell(new int[]{-1, 0, 1, 1, 1, 0}));
        add(new Cell(new int[]{-1, 0, 0, -1, 0, -1}));
        add(new Cell(new int[]{-1, 0, 1, 1, 1, -1}));
        add(new Cell(new int[]{-1, 0, 1, 0, -1, 1}));
        add(new Cell(new int[]{-1, 0, 0, -1, 0, 1}));
        add(new Cell(new int[]{-1, 0, 1, 0, -1, 0}));
        add(new Cell(new int[]{-1, 0, 1, 1, 1, 1}));
        add(new Cell(new int[]{1, 1, 0, 0, 1, -1}));
        add(new Cell(new int[]{1, 0, -1, 1, 0, 0}));
        add(new Cell(new int[]{1, 0, -1, 1, 0, 1}));
        add(new Cell(new int[]{1, 0, -1, 1, 0, -1}));
        add(new Cell(new int[]{-1, 1, 1, -1, 1, 1}));
        add(new Cell(new int[]{-1, 1, 1, -1, 1, 0}));
        add(new Cell(new int[]{-1, -1, -1, 0, 0, 0}));
        add(new Cell(new int[]{-1, -1, 0, 1, -1, 0}));
        add(new Cell(new int[]{-1, 1, 1, -1, 1, -1}));
        add(new Cell(new int[]{-1, -1, -1, 0, 0, 1}));
        add(new Cell(new int[]{-1, -1, 0, 1, -1, -1}));
        add(new Cell(new int[]{-1, -1, -1, 0, 0, -1}));
        add(new Cell(new int[]{-1, -1, 0, 1, -1, 1}));
        add(new Cell(new int[]{1, 1, 0, 0, -1, -1}));
        add(new Cell(new int[]{1, 1, 0, 1, 1, 0}));
        add(new Cell(new int[]{1, 1, -1, -1, 0, -1}));
        add(new Cell(new int[]{1, 1, -1, -1, 0, 0}));
        add(new Cell(new int[]{1, 1, 0, 1, 1, -1}));
        add(new Cell(new int[]{1, 1, 0, 0, -1, 1}));
        add(new Cell(new int[]{1, 1, -1, -1, 0, 1}));
        add(new Cell(new int[]{1, 1, 0, 0, -1, 0}));
        add(new Cell(new int[]{1, 1, 0, 1, 1, 1}));
        add(new Cell(new int[]{-1, 0, 0, -1, -1, -1}));
        add(new Cell(new int[]{-1, 0, 0, 0, 1, 0}));
        add(new Cell(new int[]{-1, 0, 1, 1, 0, -1}));
        add(new Cell(new int[]{-1, 0, 0, 0, 1, -1}));
        add(new Cell(new int[]{-1, 0, 0, -1, -1, 1}));
        add(new Cell(new int[]{-1, 0, 1, 1, 0, 1}));
        add(new Cell(new int[]{-1, 0, 0, -1, -1, 0}));
        add(new Cell(new int[]{-1, 0, 0, 0, 1, 1}));
        add(new Cell(new int[]{-1, 0, 1, 1, 0, 0}));
        add(new Cell(new int[]{1, 1, -1, -1, 1, -1}));
        add(new Cell(new int[]{1, 0, -1, 0, -1, 0}));
        add(new Cell(new int[]{1, 0, -1, 1, 1, 1}));
        add(new Cell(new int[]{1, 0, -1, 0, -1, 1}));
        add(new Cell(new int[]{1, 0, -1, 1, 1, -1}));
        add(new Cell(new int[]{1, 0, -1, 0, -1, -1}));
        add(new Cell(new int[]{1, 0, -1, 1, 1, 0}));
        add(new Cell(new int[]{-1, 1, 1, -1, 0, 1}));
        add(new Cell(new int[]{-1, 1, 1, -1, 0, 0}));
        add(new Cell(new int[]{-1, 1, 1, -1, 0, -1}));
        add(new Cell(new int[]{0, 0, 0, 1, -1, 1}));
        add(new Cell(new int[]{0, 0, -1, 0, 0, -1}));
        add(new Cell(new int[]{0, 0, 0, 1, -1, -1}));
        add(new Cell(new int[]{1, 0, 1, -1, 1, 1}));
        add(new Cell(new int[]{0, 0, 0, 1, -1, 0}));
        add(new Cell(new int[]{1, 0, 1, -1, 1, 0}));
        add(new Cell(new int[]{0, 0, -1, 0, 0, 1}));
        add(new Cell(new int[]{1, 0, 1, -1, 1, -1}));
        add(new Cell(new int[]{0, 0, -1, 0, 0, 0}));
        add(new Cell(new int[]{1, -1, 0, -1, -1, 1}));
        add(new Cell(new int[]{1, -1, 1, 1, 0, 1}));
        add(new Cell(new int[]{1, -1, 1, 1, 1, -1}));
        add(new Cell(new int[]{1, -1, 0, -1, 0, -1}));
        add(new Cell(new int[]{1, -1, 1, 0, -1, 0}));
        add(new Cell(new int[]{1, -1, 1, 1, 1, 1}));
        add(new Cell(new int[]{1, -1, 0, -1, 0, 0}));
        add(new Cell(new int[]{1, -1, 0, -1, 0, 1}));
        add(new Cell(new int[]{1, -1, 1, 0, -1, -1}));
        add(new Cell(new int[]{1, -1, 1, 1, 1, 0}));
        add(new Cell(new int[]{0, 1, 0, 0, 1, -1}));
        add(new Cell(new int[]{0, 1, 0, -1, -1, -1}));
        add(new Cell(new int[]{0, 1, 0, 0, 1, 0}));
        add(new Cell(new int[]{0, 1, 1, 1, 0, -1}));
        add(new Cell(new int[]{0, 1, 0, -1, -1, 0}));
        add(new Cell(new int[]{0, 1, 0, 0, 1, 1}));
        add(new Cell(new int[]{0, 1, 1, 1, 0, 0}));
        add(new Cell(new int[]{0, 1, 0, -1, -1, 1}));
        add(new Cell(new int[]{0, 1, 1, 1, 0, 1}));
        add(new Cell(new int[]{0, 0, -1, 0, -1, 1}));
        add(new Cell(new int[]{0, 0, -1, 1, 1, -1}));
        add(new Cell(new int[]{0, 0, -1, 0, -1, 0}));
        add(new Cell(new int[]{0, 0, -1, 1, 1, 1}));
        add(new Cell(new int[]{0, 0, -1, 0, -1, -1}));
        add(new Cell(new int[]{0, 0, -1, 1, 1, 0}));
        add(new Cell(new int[]{1, -1, 1, 0, -1, 1}));
        add(new Cell(new int[]{1, -1, 1, 0, 0, -1}));
        add(new Cell(new int[]{1, -1, 0, -1, 1, -1}));
        add(new Cell(new int[]{0, 1, 1, 1, -1, 1}));
        add(new Cell(new int[]{1, -1, 0, -1, 1, 0}));
        add(new Cell(new int[]{0, 1, -1, -1, 1, 1}));
        add(new Cell(new int[]{1, -1, 1, 0, 0, 1}));
        add(new Cell(new int[]{1, -1, 0, -1, 1, 1}));
        add(new Cell(new int[]{0, 1, -1, -1, 1, 0}));
        add(new Cell(new int[]{1, -1, 1, 0, 0, 0}));
        add(new Cell(new int[]{0, 1, -1, -1, 1, -1}));
        add(new Cell(new int[]{0, 1, 0, 0, 0, -1}));
        add(new Cell(new int[]{0, 1, 0, 0, 0, 0}));
        add(new Cell(new int[]{0, 1, 1, 1, -1, -1}));
        add(new Cell(new int[]{0, 1, 0, 0, 0, 1}));
        add(new Cell(new int[]{0, 1, 1, 1, -1, 0}));
        add(new Cell(new int[]{0, 0, -1, 1, 0, 1}));
        add(new Cell(new int[]{0, 0, -1, 1, 0, 0}));
        add(new Cell(new int[]{0, 0, -1, 1, 0, -1}));
        add(new Cell(new int[]{1, -1, 1, -1, -1, -1}));
        add(new Cell(new int[]{1, -1, 1, 0, 1, 0}));
        add(new Cell(new int[]{0, 1, -1, -1, 0, 1}));
        add(new Cell(new int[]{0, 1, 0, 0, -1, 1}));
        add(new Cell(new int[]{1, -1, 1, 0, 1, -1}));
        add(new Cell(new int[]{0, 1, -1, -1, 0, 0}));
        add(new Cell(new int[]{1, -1, 1, -1, -1, 1}));
        add(new Cell(new int[]{0, 1, -1, -1, 0, -1}));
        add(new Cell(new int[]{1, -1, 1, -1, -1, 0}));
        add(new Cell(new int[]{1, -1, 1, 0, 1, 1}));
        add(new Cell(new int[]{0, 1, 0, 1, 1, -1}));
        add(new Cell(new int[]{0, 1, 0, 0, -1, -1}));
        add(new Cell(new int[]{0, 1, 0, 1, 1, 0}));
        add(new Cell(new int[]{0, 1, 0, 0, -1, 0}));
        add(new Cell(new int[]{0, 1, 0, 1, 1, 1}));
        add(new Cell(new int[]{-1, 1, -1, 1, -1, 1}));
        add(new Cell(new int[]{-1, 1, -1, 1, -1, 0}));
        add(new Cell(new int[]{-1, 1, -1, 1, -1, -1}));
        add(new Cell(new int[]{0, 0, -1, 1, -1, 1}));
        add(new Cell(new int[]{0, 0, -1, 1, -1, 0}));
        add(new Cell(new int[]{0, 0, -1, 1, -1, -1}));
        add(new Cell(new int[]{1, -1, 1, -1, 0, 0}));
        add(new Cell(new int[]{0, 1, -1, -1, -1, 0}));
        add(new Cell(new int[]{0, 1, -1, 0, 1, 1}));
        add(new Cell(new int[]{0, 1, 0, 1, 0, 1}));
        add(new Cell(new int[]{1, -1, 1, -1, 0, -1}));
        add(new Cell(new int[]{0, 1, -1, -1, -1, -1}));
        add(new Cell(new int[]{0, 1, -1, 0, 1, 0}));
        add(new Cell(new int[]{0, 1, -1, 0, 1, -1}));
        add(new Cell(new int[]{1, -1, 1, -1, 0, 1}));
        add(new Cell(new int[]{0, 1, 0, 1, 0, -1}));
        add(new Cell(new int[]{0, 1, -1, -1, -1, 1}));
        add(new Cell(new int[]{0, 1, 0, 1, 0, 0}));
        add(new Cell(new int[]{1, 0, 0, -1, 0, 0}));
        add(new Cell(new int[]{1, 0, 1, 0, -1, -1}));
        add(new Cell(new int[]{1, 0, 1, 1, 1, 0}));
        add(new Cell(new int[]{1, 0, 0, -1, 0, -1}));
        add(new Cell(new int[]{1, 0, 1, 1, 1, -1}));
        add(new Cell(new int[]{1, -1, -1, 0, 0, 0}));
        add(new Cell(new int[]{1, -1, 0, 1, -1, 0}));
        add(new Cell(new int[]{1, -1, -1, 0, 0, 1}));
        add(new Cell(new int[]{1, -1, 0, 1, -1, -1}));
        add(new Cell(new int[]{1, -1, 0, 1, -1, 1}));
        add(new Cell(new int[]{0, 1, 0, 1, -1, 0}));
        add(new Cell(new int[]{0, 1, -1, 0, 0, 0}));
        add(new Cell(new int[]{0, 1, 0, 1, -1, 1}));
        add(new Cell(new int[]{0, 1, -1, 0, 0, -1}));
        add(new Cell(new int[]{1, -1, -1, 0, 1, -1}));
        add(new Cell(new int[]{1, -1, 0, 1, 0, -1}));
        add(new Cell(new int[]{1, -1, -1, -1, -1, -1}));
        add(new Cell(new int[]{1, -1, -1, 0, 1, 0}));
        add(new Cell(new int[]{0, 1, 0, 1, -1, -1}));
        add(new Cell(new int[]{0, 1, -1, 0, 0, 1}));
        add(new Cell(new int[]{-1, 1, -1, 0, -1, 1}));
        add(new Cell(new int[]{-1, 1, -1, 0, -1, 0}));
        add(new Cell(new int[]{-1, 1, -1, 1, 1, 1}));
        add(new Cell(new int[]{1, 0, 0, -1, -1, 1}));
        add(new Cell(new int[]{1, 0, 1, 1, 0, 1}));
        add(new Cell(new int[]{-1, 1, -1, 0, -1, -1}));
        add(new Cell(new int[]{-1, 1, -1, 1, 1, 0}));
        add(new Cell(new int[]{1, 0, 0, -1, -1, 0}));
        add(new Cell(new int[]{1, 0, 0, 0, 1, 1}));
        add(new Cell(new int[]{1, 0, 1, 1, 0, 0}));
        add(new Cell(new int[]{-1, 1, -1, 1, 1, -1}));
        add(new Cell(new int[]{1, 0, 0, -1, 1, 1}));
        add(new Cell(new int[]{1, 0, 1, 0, 0, 0}));
        add(new Cell(new int[]{1, 0, 0, -1, 1, 0}));
        add(new Cell(new int[]{1, 0, 1, 0, 0, -1}));
        add(new Cell(new int[]{1, 0, 0, -1, 1, -1}));
        add(new Cell(new int[]{1, 1, 1, -1, 0, 1}));
        add(new Cell(new int[]{1, -1, -1, -1, -1, 0}));
        add(new Cell(new int[]{1, -1, -1, 0, 1, 1}));
        add(new Cell(new int[]{1, -1, 0, 1, 0, 1}));
        add(new Cell(new int[]{1, -1, -1, -1, -1, 1}));
        add(new Cell(new int[]{1, -1, 0, 1, 0, 0}));
        add(new Cell(new int[]{0, 1, -1, 0, -1, -1}));
        add(new Cell(new int[]{0, 1, -1, 1, 1, 0}));
        add(new Cell(new int[]{0, 1, -1, 1, 1, -1}));
        add(new Cell(new int[]{1, -1, -1, -1, 0, -1}));
        add(new Cell(new int[]{1, -1, 0, 1, 1, 0}));
        add(new Cell(new int[]{1, -1, 0, 0, -1, -1}));
        add(new Cell(new int[]{1, -1, -1, -1, 0, 0}));
        add(new Cell(new int[]{1, -1, 0, 1, 1, -1}));
        add(new Cell(new int[]{1, 1, 1, -1, 1, -1}));
        add(new Cell(new int[]{1, 1, 1, -1, 1, 1}));
        add(new Cell(new int[]{0, 1, -1, 0, -1, 1}));
        add(new Cell(new int[]{1, 1, 1, -1, 1, 0}));
        add(new Cell(new int[]{0, 1, -1, 0, -1, 0}));
        add(new Cell(new int[]{0, 1, -1, 1, 1, 1}));
        add(new Cell(new int[]{-1, 1, -1, 1, 0, 1}));
        add(new Cell(new int[]{-1, 1, -1, 1, 0, 0}));
        add(new Cell(new int[]{1, 0, 1, 0, -1, 1}));
        add(new Cell(new int[]{-1, 1, -1, 1, 0, -1}));
        add(new Cell(new int[]{1, 0, 0, -1, 0, 1}));
        add(new Cell(new int[]{1, 0, 1, 0, -1, 0}));
        add(new Cell(new int[]{1, 0, 1, 1, 1, 1}));
        add(new Cell(new int[]{1, 0, 1, -1, -1, 0}));
        add(new Cell(new int[]{1, 0, 1, 0, 1, 1}));
        add(new Cell(new int[]{1, 0, 1, -1, -1, -1}));
        add(new Cell(new int[]{1, 0, 1, 0, 1, 0}));
        add(new Cell(new int[]{1, 0, 1, 0, 1, -1}));
        add(new Cell(new int[]{1, -1, -1, -1, 0, 1}));
        add(new Cell(new int[]{1, -1, 0, 0, -1, 0}));
        add(new Cell(new int[]{1, -1, 0, 0, -1, 1}));
        add(new Cell(new int[]{1, -1, 0, 1, 1, 1}));
        add(new Cell(new int[]{0, 1, -1, 1, 0, -1}));
        add(new Cell(new int[]{1, -1, -1, -1, 1, -1}));
        add(new Cell(new int[]{1, -1, -1, -1, 1, 0}));
        add(new Cell(new int[]{1, -1, 1, 1, -1, -1}));
        add(new Cell(new int[]{1, -1, 0, 0, 0, -1}));
        add(new Cell(new int[]{1, -1, 0, 0, 0, 0}));
        add(new Cell(new int[]{1, -1, -1, -1, 1, 1}));
        add(new Cell(new int[]{-1, 0, -1, 1, -1, -1}));
        add(new Cell(new int[]{-1, 0, -1, 1, -1, 0}));
        add(new Cell(new int[]{-1, 0, -1, 1, -1, 1}));
        add(new Cell(new int[]{0, 1, -1, 1, 0, 1}));
        add(new Cell(new int[]{0, 1, -1, 1, 0, 0}));
        add(new Cell(new int[]{-1, 1, 0, 1, 0, 1}));
        add(new Cell(new int[]{-1, 1, -1, -1, -1, 1}));
        add(new Cell(new int[]{1, 0, 1, 0, 0, 1}));
        add(new Cell(new int[]{-1, 1, -1, -1, -1, 0}));
        add(new Cell(new int[]{-1, 1, -1, 0, 1, 1}));
        add(new Cell(new int[]{-1, 1, 0, 1, 0, 0}));
        add(new Cell(new int[]{-1, 1, 0, 1, 0, -1}));
        add(new Cell(new int[]{-1, 1, -1, -1, -1, -1}));
        add(new Cell(new int[]{-1, 1, -1, 0, 1, 0}));
        add(new Cell(new int[]{-1, 1, -1, 0, 1, -1}));
        add(new Cell(new int[]{1, 0, 1, -1, 0, 1}));
        add(new Cell(new int[]{1, 0, 1, -1, 0, 0}));
        add(new Cell(new int[]{1, 0, 1, -1, 0, -1}));
        add(new Cell(new int[]{1, -1, 1, 1, -1, 1}));
        add(new Cell(new int[]{1, -1, 0, 0, 0, 1}));
        add(new Cell(new int[]{1, -1, 1, 1, -1, 0}));
        add(new Cell(new int[]{1, -1, 0, 0, 1, -1}));
        add(new Cell(new int[]{1, -1, 1, 1, 0, 0}));
        add(new Cell(new int[]{1, -1, 0, -1, -1, -1}));
        add(new Cell(new int[]{1, -1, 0, 0, 1, 0}));
        add(new Cell(new int[]{1, -1, 0, -1, -1, 0}));
        add(new Cell(new int[]{1, -1, 0, 0, 1, 1}));
        add(new Cell(new int[]{1, -1, 1, 1, 0, -1}));
        add(new Cell(new int[]{0, 1, -1, 1, -1, 1}));
        add(new Cell(new int[]{0, 1, -1, 1, -1, 0}));
        add(new Cell(new int[]{0, 1, -1, 1, -1, -1}));
        add(new Cell(new int[]{-1, 1, 0, 1, -1, 1}));
        add(new Cell(new int[]{-1, 1, 0, 1, -1, 0}));
        add(new Cell(new int[]{-1, 1, -1, 0, 0, 1}));
        add(new Cell(new int[]{1, 0, 1, -1, -1, 1}));
        add(new Cell(new int[]{-1, 1, -1, 0, 0, 0}));
        add(new Cell(new int[]{-1, 1, 0, 1, -1, -1}));
        add(new Cell(new int[]{-1, 1, -1, 0, 0, -1}));
        add(new Cell(new int[]{0, -1, 0, 0, 1, -1}));
        add(new Cell(new int[]{0, 0, 1, -1, 0, 1}));
        add(new Cell(new int[]{0, -1, 0, -1, -1, -1}));
        add(new Cell(new int[]{0, -1, 0, 0, 1, 0}));
        add(new Cell(new int[]{0, -1, 1, 1, 0, -1}));
        add(new Cell(new int[]{0, -1, -1, -1, 1, 1}));
        add(new Cell(new int[]{0, -1, 0, 0, 0, 0}));
        add(new Cell(new int[]{0, -1, 1, 1, -1, -1}));
        add(new Cell(new int[]{0, 0, 1, -1, 1, 0}));
        add(new Cell(new int[]{0, -1, 0, 0, 0, 1}));
        add(new Cell(new int[]{0, -1, 1, 1, -1, 0}));
        add(new Cell(new int[]{0, 0, 1, -1, 1, 1}));
        add(new Cell(new int[]{0, -1, 1, 1, -1, 1}));
        add(new Cell(new int[]{0, 0, 1, -1, 1, -1}));
        add(new Cell(new int[]{0, -1, 0, -1, 0, -1}));
        add(new Cell(new int[]{0, -1, 1, 1, 1, -1}));
        add(new Cell(new int[]{0, 0, 1, -1, -1, 0}));
        add(new Cell(new int[]{0, 0, 1, 0, 1, 1}));
        add(new Cell(new int[]{0, -1, 0, -1, 0, 0}));
        add(new Cell(new int[]{0, -1, 1, 0, -1, -1}));
        add(new Cell(new int[]{0, -1, 1, 1, 1, 0}));
        add(new Cell(new int[]{0, 0, 1, -1, -1, 1}));
        add(new Cell(new int[]{0, -1, 0, -1, -1, 0}));
        add(new Cell(new int[]{0, -1, 0, 0, 1, 1}));
        add(new Cell(new int[]{0, -1, 1, 1, 0, 0}));
        add(new Cell(new int[]{0, 0, 1, -1, 0, -1}));
        add(new Cell(new int[]{0, -1, 0, -1, -1, 1}));
        add(new Cell(new int[]{0, -1, 1, 1, 0, 1}));
        add(new Cell(new int[]{0, 0, 1, -1, 0, 0}));
        add(new Cell(new int[]{0, 0, 1, 0, 0, 0}));
        add(new Cell(new int[]{0, 0, 0, -1, 1, 1}));
        add(new Cell(new int[]{0, -1, 0, 1, 1, -1}));
        add(new Cell(new int[]{0, 0, 1, 0, 0, 1}));
        add(new Cell(new int[]{0, -1, -1, -1, 0, -1}));
        add(new Cell(new int[]{0, -1, -1, -1, -1, 1}));
        add(new Cell(new int[]{0, -1, -1, -1, -1, 0}));
        add(new Cell(new int[]{0, -1, -1, 0, 1, 1}));
        add(new Cell(new int[]{0, -1, -1, -1, -1, -1}));
        add(new Cell(new int[]{0, -1, -1, 0, 1, 0}));
        add(new Cell(new int[]{0, -1, 0, 1, 0, -1}));
        add(new Cell(new int[]{0, 0, 1, 0, 1, -1}));
        add(new Cell(new int[]{0, -1, 0, 1, 0, 0}));
        add(new Cell(new int[]{0, 0, 1, -1, -1, -1}));
        add(new Cell(new int[]{0, 0, 1, 0, 1, 0}));
        add(new Cell(new int[]{0, -1, 0, 1, 0, 1}));
        add(new Cell(new int[]{0, 0, 1, 0, -1, 1}));
        add(new Cell(new int[]{0, 0, 1, 0, -1, -1}));
        add(new Cell(new int[]{0, 0, 1, 1, 1, 0}));
        add(new Cell(new int[]{0, 0, 0, -1, 0, 0}));
        add(new Cell(new int[]{0, -1, 0, 0, 0, -1}));
        add(new Cell(new int[]{0, 0, 1, 0, -1, 0}));
        add(new Cell(new int[]{0, 0, 1, 1, 1, 1}));
        add(new Cell(new int[]{0, 0, 0, -1, 0, 1}));
        add(new Cell(new int[]{0, -1, -1, -1, 1, 0}));
        add(new Cell(new int[]{0, -1, -1, -1, 1, -1}));
        add(new Cell(new int[]{0, 1, 1, -1, 1, 1}));
        add(new Cell(new int[]{0, -1, -1, -1, 0, 1}));
        add(new Cell(new int[]{0, -1, -1, -1, 0, 0}));
        add(new Cell(new int[]{0, -1, 0, 0, -1, -1}));
        add(new Cell(new int[]{0, -1, 0, 1, 1, 0}));
        add(new Cell(new int[]{0, 0, 0, -1, 1, -1}));
        add(new Cell(new int[]{0, -1, 0, 0, -1, 0}));
        add(new Cell(new int[]{0, -1, 0, 1, 1, 1}));
        add(new Cell(new int[]{0, 0, 1, 0, 0, -1}));
        add(new Cell(new int[]{0, 0, 0, -1, 1, 0}));
        add(new Cell(new int[]{0, -1, 0, 0, -1, 1}));
        add(new Cell(new int[]{0, 0, 1, 1, 0, 1}));
        add(new Cell(new int[]{0, 0, 0, -1, -1, 1}));
        add(new Cell(new int[]{0, 0, 1, 1, 0, -1}));
        add(new Cell(new int[]{0, 0, 0, -1, -1, -1}));
        add(new Cell(new int[]{0, 0, 0, 0, 1, 0}));
        add(new Cell(new int[]{0, 0, 1, 1, 0, 0}));
        add(new Cell(new int[]{0, 0, 0, -1, -1, 0}));
        add(new Cell(new int[]{0, 0, 0, 0, 1, 1}));
        add(new Cell(new int[]{0, 1, 1, -1, 1, -1}));
        add(new Cell(new int[]{0, 1, 1, -1, 1, 0}));
        add(new Cell(new int[]{1, -1, 1, -1, 1, 1}));
        add(new Cell(new int[]{1, -1, 1, -1, 1, 0}));
        add(new Cell(new int[]{0, 1, 1, -1, 0, 0}));
        add(new Cell(new int[]{0, -1, -1, 0, -1, 1}));
        add(new Cell(new int[]{0, 1, 1, -1, 0, 1}));
        add(new Cell(new int[]{0, -1, -1, 0, -1, 0}));
        add(new Cell(new int[]{0, -1, -1, 1, 1, 1}));
        add(new Cell(new int[]{1, -1, 1, -1, 1, -1}));
        add(new Cell(new int[]{0, -1, -1, 0, -1, -1}));
        add(new Cell(new int[]{0, -1, -1, 1, 1, 0}));
        add(new Cell(new int[]{0, -1, -1, 1, 1, -1}));
        add(new Cell(new int[]{0, 0, 1, 1, 1, -1}));
        add(new Cell(new int[]{0, 0, 0, -1, 0, -1}));
        add(new Cell(new int[]{0, 0, 1, 1, -1, 0}));
        add(new Cell(new int[]{0, 0, -1, -1, 1, 1}));
        add(new Cell(new int[]{0, 0, 0, 0, 0, 1}));
        add(new Cell(new int[]{0, 0, 1, 1, -1, 1}));
        add(new Cell(new int[]{0, 0, -1, -1, 1, 0}));
        add(new Cell(new int[]{0, 0, 0, 0, 0, -1}));
        add(new Cell(new int[]{0, 0, 1, 1, -1, -1}));
        add(new Cell(new int[]{0, -1, -1, 0, 1, -1}));
        add(new Cell(new int[]{0, 1, 1, -1, 0, -1}));
        add(new Cell(new int[]{0, 1, 1, -1, -1, -1}));
        add(new Cell(new int[]{0, 1, 1, 0, 1, 0}));
        add(new Cell(new int[]{0, 1, 1, -1, -1, 0}));
        add(new Cell(new int[]{0, 1, 1, 0, 1, 1}));
        add(new Cell(new int[]{0, -1, -1, 0, 0, 1}));
        add(new Cell(new int[]{0, 1, 1, -1, -1, 1}));
        add(new Cell(new int[]{0, -1, -1, 0, 0, 0}));
        add(new Cell(new int[]{0, -1, -1, 0, 0, -1}));
        add(new Cell(new int[]{0, -1, 0, 1, -1, -1}));
        add(new Cell(new int[]{0, 0, 0, 0, 1, -1}));
        add(new Cell(new int[]{0, -1, 0, 1, -1, 0}));
        add(new Cell(new int[]{0, -1, 0, 1, -1, 1}));
        add(new Cell(new int[]{0, 0, -1, -1, 0, 0}));
        add(new Cell(new int[]{0, 0, 0, 1, 1, 1}));
        add(new Cell(new int[]{0, 0, 0, 0, -1, 0}));
        add(new Cell(new int[]{0, 0, -1, -1, 0, -1}));
        add(new Cell(new int[]{0, 0, 0, 0, -1, 1}));
        add(new Cell(new int[]{0, 0, 0, 1, 1, -1}));
        add(new Cell(new int[]{0, 0, -1, -1, 0, 1}));
        add(new Cell(new int[]{0, 0, 0, 1, 1, 0}));
        add(new Cell(new int[]{0, 0, 0, 0, -1, -1}));
        add(new Cell(new int[]{0, 1, 1, 0, 1, -1}));
        add(new Cell(new int[]{0, -1, -1, 1, -1, 1}));
        add(new Cell(new int[]{0, 1, 0, -1, 1, 0}));
        add(new Cell(new int[]{0, 1, 1, 0, 0, -1}));
        add(new Cell(new int[]{0, -1, -1, 1, -1, 0}));
        add(new Cell(new int[]{0, 1, 0, -1, 1, 1}));
        add(new Cell(new int[]{0, 1, 1, 0, 0, 0}));
        add(new Cell(new int[]{0, -1, -1, 1, -1, -1}));
        add(new Cell(new int[]{0, 1, 1, 0, 0, 1}));
        add(new Cell(new int[]{0, 0, -1, -1, 1, -1}));
        add(new Cell(new int[]{0, 0, -1, -1, -1, -1}));
        add(new Cell(new int[]{0, 0, -1, 0, 1, 0}));
        add(new Cell(new int[]{0, 0, 0, 1, 0, 0}));
        add(new Cell(new int[]{0, 0, -1, 0, 1, -1}));
        add(new Cell(new int[]{0, 0, 0, 1, 0, 1}));
        add(new Cell(new int[]{0, 0, -1, -1, -1, 1}));
        add(new Cell(new int[]{0, 0, -1, -1, -1, 0}));
        add(new Cell(new int[]{0, 0, -1, 0, 1, 1}));
        add(new Cell(new int[]{0, 0, 0, 1, 0, -1}));
        add(new Cell(new int[]{0, 1, 0, -1, 1, -1}));
        add(new Cell(new int[]{0, -1, -1, 1, 0, 1}));
        add(new Cell(new int[]{0, 1, 0, -1, 0, -1}));
        add(new Cell(new int[]{0, 1, 1, 1, 1, -1}));
        add(new Cell(new int[]{0, -1, -1, 1, 0, 0}));
        add(new Cell(new int[]{0, 1, 0, -1, 0, 0}));
        add(new Cell(new int[]{0, 1, 1, 0, -1, -1}));
        add(new Cell(new int[]{0, 1, 1, 1, 1, 0}));
        add(new Cell(new int[]{0, 1, 0, -1, 0, 1}));
        add(new Cell(new int[]{0, 1, 1, 0, -1, 0}));
        add(new Cell(new int[]{0, 1, 1, 1, 1, 1}));
        add(new Cell(new int[]{0, -1, -1, 1, 0, -1}));
        add(new Cell(new int[]{0, 1, 1, 0, -1, 1}));
    }};

    public static final Set<Cell> D2R2 = new HashSet<>() {{
        add(new Cell(new int[]{2, 1}));
        add(new Cell(new int[]{-1, -2}));
        add(new Cell(new int[]{-2, -2}));
        add(new Cell(new int[]{2, 2}));
        add(new Cell(new int[]{-2, -1}));
        add(new Cell(new int[]{1, 2}));
        add(new Cell(new int[]{-2, 0}));
        add(new Cell(new int[]{0, 2}));
        add(new Cell(new int[]{-2, 1}));
        add(new Cell(new int[]{-1, 2}));
        add(new Cell(new int[]{-2, 2}));
        add(new Cell(new int[]{2, -2}));
        add(new Cell(new int[]{2, -1}));
        add(new Cell(new int[]{1, -2}));
        add(new Cell(new int[]{2, 0}));
        add(new Cell(new int[]{0, -2}));
    }};

    public static final Set<Cell> D2R3 = new HashSet<>() {{
        add(new Cell(new int[]{3, 2}));
        add(new Cell(new int[]{-2, -3}));
        add(new Cell(new int[]{-3, -3}));
        add(new Cell(new int[]{3, 3}));
        add(new Cell(new int[]{-3, -2}));
        add(new Cell(new int[]{2, 3}));
        add(new Cell(new int[]{-3, -1}));
        add(new Cell(new int[]{1, 3}));
        add(new Cell(new int[]{-3, 0}));
        add(new Cell(new int[]{0, 3}));
        add(new Cell(new int[]{-3, 1}));
        add(new Cell(new int[]{-1, 3}));
        add(new Cell(new int[]{-3, 2}));
        add(new Cell(new int[]{-2, 3}));
        add(new Cell(new int[]{-3, 3}));
        add(new Cell(new int[]{3, -3}));
        add(new Cell(new int[]{3, -2}));
        add(new Cell(new int[]{2, -3}));
        add(new Cell(new int[]{3, -1}));
        add(new Cell(new int[]{1, -3}));
        add(new Cell(new int[]{3, 0}));
        add(new Cell(new int[]{0, -3}));
        add(new Cell(new int[]{3, 1}));
        add(new Cell(new int[]{-1, -3}));
    }};

    public static final Set<Cell> D2R4 = new HashSet<>() {{
        add(new Cell(new int[]{4, 3}));
        add(new Cell(new int[]{4, 4}));
        add(new Cell(new int[]{-4, -4}));
        add(new Cell(new int[]{-4, -3}));
        add(new Cell(new int[]{-4, -2}));
        add(new Cell(new int[]{2, 4}));
        add(new Cell(new int[]{-4, -1}));
        add(new Cell(new int[]{-4, 0}));
        add(new Cell(new int[]{0, 4}));
        add(new Cell(new int[]{-4, 1}));
        add(new Cell(new int[]{-4, 2}));
        add(new Cell(new int[]{-2, 4}));
        add(new Cell(new int[]{-4, 3}));
        add(new Cell(new int[]{-4, 4}));
        add(new Cell(new int[]{3, -4}));
        add(new Cell(new int[]{1, -4}));
        add(new Cell(new int[]{-1, -4}));
        add(new Cell(new int[]{-3, -4}));
        add(new Cell(new int[]{3, 4}));
        add(new Cell(new int[]{1, 4}));
        add(new Cell(new int[]{-1, 4}));
        add(new Cell(new int[]{-3, 4}));
        add(new Cell(new int[]{4, -4}));
        add(new Cell(new int[]{4, -3}));
        add(new Cell(new int[]{4, -2}));
        add(new Cell(new int[]{2, -4}));
        add(new Cell(new int[]{4, -1}));
        add(new Cell(new int[]{4, 0}));
        add(new Cell(new int[]{0, -4}));
        add(new Cell(new int[]{4, 1}));
        add(new Cell(new int[]{4, 2}));
        add(new Cell(new int[]{-2, -4}));
    }};

    public static final Set<Cell> D3R2 = new HashSet<>() {{
        add(new Cell(new int[]{2, 1, 0}));
        add(new Cell(new int[]{2, 1, 1}));
        add(new Cell(new int[]{2, 1, 2}));
        add(new Cell(new int[]{1, -1, 2}));
        add(new Cell(new int[]{-2, 2, -2}));
        add(new Cell(new int[]{-2, 2, -1}));
        add(new Cell(new int[]{-2, 2, 0}));
        add(new Cell(new int[]{-2, 2, 1}));
        add(new Cell(new int[]{2, 2, -2}));
        add(new Cell(new int[]{-2, 2, 2}));
        add(new Cell(new int[]{2, 2, -1}));
        add(new Cell(new int[]{1, 0, -2}));
        add(new Cell(new int[]{2, 2, 0}));
        add(new Cell(new int[]{0, -2, -2}));
        add(new Cell(new int[]{2, 2, 1}));
        add(new Cell(new int[]{0, -2, -1}));
        add(new Cell(new int[]{2, 2, 2}));
        add(new Cell(new int[]{0, -2, 0}));
        add(new Cell(new int[]{0, -2, 1}));
        add(new Cell(new int[]{1, 0, 2}));
        add(new Cell(new int[]{0, -2, 2}));
        add(new Cell(new int[]{1, 1, -2}));
        add(new Cell(new int[]{0, -1, -2}));
        add(new Cell(new int[]{1, 1, 2}));
        add(new Cell(new int[]{0, -1, 2}));
        add(new Cell(new int[]{1, 2, -2}));
        add(new Cell(new int[]{1, 2, -1}));
        add(new Cell(new int[]{0, 0, -2}));
        add(new Cell(new int[]{1, 2, 0}));
        add(new Cell(new int[]{-1, -2, -2}));
        add(new Cell(new int[]{1, 2, 1}));
        add(new Cell(new int[]{-1, -2, -1}));
        add(new Cell(new int[]{1, 2, 2}));
        add(new Cell(new int[]{-1, -2, 0}));
        add(new Cell(new int[]{-1, -2, 1}));
        add(new Cell(new int[]{0, 0, 2}));
        add(new Cell(new int[]{-1, -2, 2}));
        add(new Cell(new int[]{0, 1, -2}));
        add(new Cell(new int[]{-1, -1, -2}));
        add(new Cell(new int[]{0, 1, 2}));
        add(new Cell(new int[]{-1, -1, 2}));
        add(new Cell(new int[]{0, 2, -2}));
        add(new Cell(new int[]{0, 2, -1}));
        add(new Cell(new int[]{-1, 0, -2}));
        add(new Cell(new int[]{-2, -2, -2}));
        add(new Cell(new int[]{0, 2, 0}));
        add(new Cell(new int[]{-2, -2, -1}));
        add(new Cell(new int[]{0, 2, 1}));
        add(new Cell(new int[]{-2, -2, 0}));
        add(new Cell(new int[]{0, 2, 2}));
        add(new Cell(new int[]{-2, -2, 1}));
        add(new Cell(new int[]{-1, 0, 2}));
        add(new Cell(new int[]{2, -2, -2}));
        add(new Cell(new int[]{-2, -2, 2}));
        add(new Cell(new int[]{2, -2, -1}));
        add(new Cell(new int[]{2, -2, 0}));
        add(new Cell(new int[]{2, -2, 1}));
        add(new Cell(new int[]{2, -2, 2}));
        add(new Cell(new int[]{-1, 1, -2}));
        add(new Cell(new int[]{-2, -1, -2}));
        add(new Cell(new int[]{-2, -1, -1}));
        add(new Cell(new int[]{-2, -1, 0}));
        add(new Cell(new int[]{-2, -1, 1}));
        add(new Cell(new int[]{-1, 1, 2}));
        add(new Cell(new int[]{-2, -1, 2}));
        add(new Cell(new int[]{2, -1, -2}));
        add(new Cell(new int[]{2, -1, -1}));
        add(new Cell(new int[]{2, -1, 0}));
        add(new Cell(new int[]{2, -1, 1}));
        add(new Cell(new int[]{2, -1, 2}));
        add(new Cell(new int[]{-1, 2, -2}));
        add(new Cell(new int[]{-2, 0, -2}));
        add(new Cell(new int[]{-1, 2, -1}));
        add(new Cell(new int[]{-2, 0, -1}));
        add(new Cell(new int[]{-1, 2, 0}));
        add(new Cell(new int[]{-2, 0, 0}));
        add(new Cell(new int[]{-1, 2, 1}));
        add(new Cell(new int[]{-2, 0, 1}));
        add(new Cell(new int[]{-1, 2, 2}));
        add(new Cell(new int[]{2, 0, -2}));
        add(new Cell(new int[]{-2, 0, 2}));
        add(new Cell(new int[]{2, 0, -1}));
        add(new Cell(new int[]{1, -2, -2}));
        add(new Cell(new int[]{2, 0, 0}));
        add(new Cell(new int[]{1, -2, -1}));
        add(new Cell(new int[]{2, 0, 1}));
        add(new Cell(new int[]{1, -2, 0}));
        add(new Cell(new int[]{2, 0, 2}));
        add(new Cell(new int[]{1, -2, 1}));
        add(new Cell(new int[]{1, -2, 2}));
        add(new Cell(new int[]{-2, 1, -2}));
        add(new Cell(new int[]{-2, 1, -1}));
        add(new Cell(new int[]{-2, 1, 0}));
        add(new Cell(new int[]{-2, 1, 1}));
        add(new Cell(new int[]{-2, 1, 2}));
        add(new Cell(new int[]{2, 1, -2}));
        add(new Cell(new int[]{2, 1, -1}));
        add(new Cell(new int[]{1, -1, -2}));
    }};

    public static final Set<Cell> D3R3 = new HashSet<>() {{
        add(new Cell(new int[]{3, 3, 1}));
        add(new Cell(new int[]{0, -3, -2}));
        add(new Cell(new int[]{3, 3, 2}));
        add(new Cell(new int[]{0, -3, -1}));
        add(new Cell(new int[]{3, 3, 3}));
        add(new Cell(new int[]{0, -3, 0}));
        add(new Cell(new int[]{0, -3, 1}));
        add(new Cell(new int[]{2, 1, 3}));
        add(new Cell(new int[]{0, -3, 2}));
        add(new Cell(new int[]{1, -1, 3}));
        add(new Cell(new int[]{0, -3, 3}));
        add(new Cell(new int[]{2, 2, -3}));
        add(new Cell(new int[]{1, 0, -3}));
        add(new Cell(new int[]{0, -2, -3}));
        add(new Cell(new int[]{2, 2, 3}));
        add(new Cell(new int[]{1, 0, 3}));
        add(new Cell(new int[]{0, -2, 3}));
        add(new Cell(new int[]{2, 3, -3}));
        add(new Cell(new int[]{2, 3, -2}));
        add(new Cell(new int[]{1, 1, -3}));
        add(new Cell(new int[]{2, 3, -1}));
        add(new Cell(new int[]{0, -1, -3}));
        add(new Cell(new int[]{2, 3, 0}));
        add(new Cell(new int[]{-1, -3, -3}));
        add(new Cell(new int[]{2, 3, 1}));
        add(new Cell(new int[]{-1, -3, -2}));
        add(new Cell(new int[]{2, 3, 2}));
        add(new Cell(new int[]{-1, -3, -1}));
        add(new Cell(new int[]{2, 3, 3}));
        add(new Cell(new int[]{-1, -3, 0}));
        add(new Cell(new int[]{-1, -3, 1}));
        add(new Cell(new int[]{1, 1, 3}));
        add(new Cell(new int[]{-1, -3, 2}));
        add(new Cell(new int[]{0, -1, 3}));
        add(new Cell(new int[]{-1, -3, 3}));
        add(new Cell(new int[]{1, 2, -3}));
        add(new Cell(new int[]{0, 0, -3}));
        add(new Cell(new int[]{-1, -2, -3}));
        add(new Cell(new int[]{1, 2, 3}));
        add(new Cell(new int[]{0, 0, 3}));
        add(new Cell(new int[]{-1, -2, 3}));
        add(new Cell(new int[]{1, 3, -3}));
        add(new Cell(new int[]{1, 3, -2}));
        add(new Cell(new int[]{0, 1, -3}));
        add(new Cell(new int[]{1, 3, -1}));
        add(new Cell(new int[]{-1, -1, -3}));
        add(new Cell(new int[]{1, 3, 0}));
        add(new Cell(new int[]{-2, -3, -3}));
        add(new Cell(new int[]{1, 3, 1}));
        add(new Cell(new int[]{-2, -3, -2}));
        add(new Cell(new int[]{1, 3, 2}));
        add(new Cell(new int[]{-2, -3, -1}));
        add(new Cell(new int[]{1, 3, 3}));
        add(new Cell(new int[]{-2, -3, 0}));
        add(new Cell(new int[]{-2, -3, 1}));
        add(new Cell(new int[]{0, 1, 3}));
        add(new Cell(new int[]{-2, -3, 2}));
        add(new Cell(new int[]{-1, -1, 3}));
        add(new Cell(new int[]{-2, -3, 3}));
        add(new Cell(new int[]{0, 2, -3}));
        add(new Cell(new int[]{-1, 0, -3}));
        add(new Cell(new int[]{-2, -2, -3}));
        add(new Cell(new int[]{0, 2, 3}));
        add(new Cell(new int[]{-1, 0, 3}));
        add(new Cell(new int[]{-2, -2, 3}));
        add(new Cell(new int[]{0, 3, -3}));
        add(new Cell(new int[]{0, 3, -2}));
        add(new Cell(new int[]{-1, 1, -3}));
        add(new Cell(new int[]{0, 3, -1}));
        add(new Cell(new int[]{-2, -1, -3}));
        add(new Cell(new int[]{-3, -3, -3}));
        add(new Cell(new int[]{0, 3, 0}));
        add(new Cell(new int[]{-3, -3, -2}));
        add(new Cell(new int[]{0, 3, 1}));
        add(new Cell(new int[]{-3, -3, -1}));
        add(new Cell(new int[]{0, 3, 2}));
        add(new Cell(new int[]{-3, -3, 0}));
        add(new Cell(new int[]{0, 3, 3}));
        add(new Cell(new int[]{-3, -3, 1}));
        add(new Cell(new int[]{-1, 1, 3}));
        add(new Cell(new int[]{-3, -3, 2}));
        add(new Cell(new int[]{-2, -1, 3}));
        add(new Cell(new int[]{-3, -3, 3}));
        add(new Cell(new int[]{-1, 2, -3}));
        add(new Cell(new int[]{-2, 0, -3}));
        add(new Cell(new int[]{-3, -2, -3}));
        add(new Cell(new int[]{-3, -2, -2}));
        add(new Cell(new int[]{-3, -2, -1}));
        add(new Cell(new int[]{-3, -2, 0}));
        add(new Cell(new int[]{-3, -2, 1}));
        add(new Cell(new int[]{-1, 2, 3}));
        add(new Cell(new int[]{-3, -2, 2}));
        add(new Cell(new int[]{-2, 0, 3}));
        add(new Cell(new int[]{-3, -2, 3}));
        add(new Cell(new int[]{-1, 3, -3}));
        add(new Cell(new int[]{-1, 3, -2}));
        add(new Cell(new int[]{-2, 1, -3}));
        add(new Cell(new int[]{-3, -1, -3}));
        add(new Cell(new int[]{-1, 3, -1}));
        add(new Cell(new int[]{-3, -1, -2}));
        add(new Cell(new int[]{-1, 3, 0}));
        add(new Cell(new int[]{-3, -1, -1}));
        add(new Cell(new int[]{-1, 3, 1}));
        add(new Cell(new int[]{-3, -1, 0}));
        add(new Cell(new int[]{-1, 3, 2}));
        add(new Cell(new int[]{-3, -1, 1}));
        add(new Cell(new int[]{-1, 3, 3}));
        add(new Cell(new int[]{-3, -1, 2}));
        add(new Cell(new int[]{-2, 1, 3}));
        add(new Cell(new int[]{-3, -1, 3}));
        add(new Cell(new int[]{-2, 2, -3}));
        add(new Cell(new int[]{-3, 0, -3}));
        add(new Cell(new int[]{-3, 0, -2}));
        add(new Cell(new int[]{-3, 0, -1}));
        add(new Cell(new int[]{-3, 0, 0}));
        add(new Cell(new int[]{-3, 0, 1}));
        add(new Cell(new int[]{-3, 0, 2}));
        add(new Cell(new int[]{-2, 2, 3}));
        add(new Cell(new int[]{-3, 0, 3}));
        add(new Cell(new int[]{-2, 3, -3}));
        add(new Cell(new int[]{-3, 1, -3}));
        add(new Cell(new int[]{-2, 3, -2}));
        add(new Cell(new int[]{-3, 1, -2}));
        add(new Cell(new int[]{-2, 3, -1}));
        add(new Cell(new int[]{-3, 1, -1}));
        add(new Cell(new int[]{-2, 3, 0}));
        add(new Cell(new int[]{-3, 1, 0}));
        add(new Cell(new int[]{-2, 3, 1}));
        add(new Cell(new int[]{-3, 1, 1}));
        add(new Cell(new int[]{-2, 3, 2}));
        add(new Cell(new int[]{-3, 1, 2}));
        add(new Cell(new int[]{-2, 3, 3}));
        add(new Cell(new int[]{-3, 1, 3}));
        add(new Cell(new int[]{3, -3, -3}));
        add(new Cell(new int[]{3, -3, -2}));
        add(new Cell(new int[]{3, -3, -1}));
        add(new Cell(new int[]{3, -3, 0}));
        add(new Cell(new int[]{3, -3, 1}));
        add(new Cell(new int[]{3, -3, 2}));
        add(new Cell(new int[]{3, -3, 3}));
        add(new Cell(new int[]{-3, 2, -3}));
        add(new Cell(new int[]{-3, 2, -2}));
        add(new Cell(new int[]{-3, 2, -1}));
        add(new Cell(new int[]{-3, 2, 0}));
        add(new Cell(new int[]{-3, 2, 1}));
        add(new Cell(new int[]{-3, 2, 2}));
        add(new Cell(new int[]{-3, 2, 3}));
        add(new Cell(new int[]{3, -2, -3}));
        add(new Cell(new int[]{3, -2, -2}));
        add(new Cell(new int[]{3, -2, -1}));
        add(new Cell(new int[]{3, -2, 0}));
        add(new Cell(new int[]{3, -2, 1}));
        add(new Cell(new int[]{3, -2, 2}));
        add(new Cell(new int[]{3, -2, 3}));
        add(new Cell(new int[]{-3, 3, -3}));
        add(new Cell(new int[]{-3, 3, -2}));
        add(new Cell(new int[]{-3, 3, -1}));
        add(new Cell(new int[]{-3, 3, 0}));
        add(new Cell(new int[]{-3, 3, 1}));
        add(new Cell(new int[]{-3, 3, 2}));
        add(new Cell(new int[]{-3, 3, 3}));
        add(new Cell(new int[]{3, -1, -3}));
        add(new Cell(new int[]{3, -1, -2}));
        add(new Cell(new int[]{2, -3, -3}));
        add(new Cell(new int[]{3, -1, -1}));
        add(new Cell(new int[]{2, -3, -2}));
        add(new Cell(new int[]{3, -1, 0}));
        add(new Cell(new int[]{2, -3, -1}));
        add(new Cell(new int[]{3, -1, 1}));
        add(new Cell(new int[]{2, -3, 0}));
        add(new Cell(new int[]{3, -1, 2}));
        add(new Cell(new int[]{2, -3, 1}));
        add(new Cell(new int[]{3, -1, 3}));
        add(new Cell(new int[]{2, -3, 2}));
        add(new Cell(new int[]{2, -3, 3}));
        add(new Cell(new int[]{3, 0, -3}));
        add(new Cell(new int[]{3, 0, -2}));
        add(new Cell(new int[]{2, -2, -3}));
        add(new Cell(new int[]{3, 0, -1}));
        add(new Cell(new int[]{3, 0, 0}));
        add(new Cell(new int[]{3, 0, 1}));
        add(new Cell(new int[]{3, 0, 2}));
        add(new Cell(new int[]{3, 0, 3}));
        add(new Cell(new int[]{2, -2, 3}));
        add(new Cell(new int[]{3, 1, -3}));
        add(new Cell(new int[]{3, 1, -2}));
        add(new Cell(new int[]{2, -1, -3}));
        add(new Cell(new int[]{3, 1, -1}));
        add(new Cell(new int[]{1, -3, -3}));
        add(new Cell(new int[]{3, 1, 0}));
        add(new Cell(new int[]{1, -3, -2}));
        add(new Cell(new int[]{3, 1, 1}));
        add(new Cell(new int[]{1, -3, -1}));
        add(new Cell(new int[]{3, 1, 2}));
        add(new Cell(new int[]{1, -3, 0}));
        add(new Cell(new int[]{3, 1, 3}));
        add(new Cell(new int[]{1, -3, 1}));
        add(new Cell(new int[]{1, -3, 2}));
        add(new Cell(new int[]{2, -1, 3}));
        add(new Cell(new int[]{1, -3, 3}));
        add(new Cell(new int[]{3, 2, -3}));
        add(new Cell(new int[]{3, 2, -2}));
        add(new Cell(new int[]{2, 0, -3}));
        add(new Cell(new int[]{3, 2, -1}));
        add(new Cell(new int[]{1, -2, -3}));
        add(new Cell(new int[]{3, 2, 0}));
        add(new Cell(new int[]{3, 2, 1}));
        add(new Cell(new int[]{3, 2, 2}));
        add(new Cell(new int[]{3, 2, 3}));
        add(new Cell(new int[]{2, 0, 3}));
        add(new Cell(new int[]{1, -2, 3}));
        add(new Cell(new int[]{3, 3, -3}));
        add(new Cell(new int[]{3, 3, -2}));
        add(new Cell(new int[]{2, 1, -3}));
        add(new Cell(new int[]{3, 3, -1}));
        add(new Cell(new int[]{1, -1, -3}));
        add(new Cell(new int[]{3, 3, 0}));
        add(new Cell(new int[]{0, -3, -3}));
    }};

    public static final Set<Cell> D4R2 = new HashSet<>() {{
        add(new Cell(new int[]{2, 0, -2, 2}));
        add(new Cell(new int[]{1, -1, -1, 2}));
        add(new Cell(new int[]{2, 0, -2, 1}));
        add(new Cell(new int[]{2, 1, 0, 2}));
        add(new Cell(new int[]{2, 0, -2, 0}));
        add(new Cell(new int[]{2, 1, 0, 1}));
        add(new Cell(new int[]{2, 2, 2, 2}));
        add(new Cell(new int[]{0, -2, 0, 1}));
        add(new Cell(new int[]{0, -1, 2, 2}));
        add(new Cell(new int[]{2, 0, -2, -1}));
        add(new Cell(new int[]{2, 1, 0, 0}));
        add(new Cell(new int[]{2, 2, 2, 1}));
        add(new Cell(new int[]{0, -2, 0, 2}));
        add(new Cell(new int[]{1, 0, 1, 2}));
        add(new Cell(new int[]{2, 0, -1, -1}));
        add(new Cell(new int[]{2, 1, 1, 0}));
        add(new Cell(new int[]{0, -2, 1, 0}));
        add(new Cell(new int[]{1, -2, -2, -2}));
        add(new Cell(new int[]{1, 0, 2, 0}));
        add(new Cell(new int[]{2, 0, -1, -2}));
        add(new Cell(new int[]{2, 1, 1, -1}));
        add(new Cell(new int[]{0, -2, 1, 1}));
        add(new Cell(new int[]{1, -2, -2, -1}));
        add(new Cell(new int[]{1, 0, 2, 1}));
        add(new Cell(new int[]{2, 1, 1, -2}));
        add(new Cell(new int[]{0, -2, 1, -2}));
        add(new Cell(new int[]{1, 0, 2, -2}));
        add(new Cell(new int[]{0, -2, 1, -1}));
        add(new Cell(new int[]{1, 0, 2, -1}));
        add(new Cell(new int[]{1, -1, 0, -2}));
        add(new Cell(new int[]{1, -2, -2, 2}));
        add(new Cell(new int[]{2, 0, -1, 2}));
        add(new Cell(new int[]{2, 0, -1, 1}));
        add(new Cell(new int[]{2, 1, 1, 2}));
        add(new Cell(new int[]{0, -2, 1, 2}));
        add(new Cell(new int[]{1, -2, -2, 0}));
        add(new Cell(new int[]{1, 0, 2, 2}));
        add(new Cell(new int[]{2, 0, -1, 0}));
        add(new Cell(new int[]{2, 1, 1, 1}));
        add(new Cell(new int[]{1, -2, -2, 1}));
        add(new Cell(new int[]{1, -1, 0, 2}));
        add(new Cell(new int[]{2, -1, -2, -2}));
        add(new Cell(new int[]{2, 0, 0, 0}));
        add(new Cell(new int[]{2, 1, 2, 1}));
        add(new Cell(new int[]{0, -2, 2, 1}));
        add(new Cell(new int[]{1, -2, -1, -1}));
        add(new Cell(new int[]{2, -1, -2, -1}));
        add(new Cell(new int[]{2, 0, 0, -1}));
        add(new Cell(new int[]{2, 1, 2, 0}));
        add(new Cell(new int[]{0, -2, 2, 2}));
        add(new Cell(new int[]{1, -2, -1, 0}));
        add(new Cell(new int[]{2, 0, 0, -2}));
        add(new Cell(new int[]{2, 1, 2, -1}));
        add(new Cell(new int[]{0, -2, 2, -1}));
        add(new Cell(new int[]{1, -1, 1, -2}));
        add(new Cell(new int[]{2, 1, 2, -2}));
        add(new Cell(new int[]{0, -2, 2, 0}));
        add(new Cell(new int[]{1, -2, -1, -2}));
        add(new Cell(new int[]{0, -2, 2, -2}));
        add(new Cell(new int[]{2, -1, -2, 2}));
        add(new Cell(new int[]{2, -1, -2, 0}));
        add(new Cell(new int[]{2, 0, 0, 2}));
        add(new Cell(new int[]{1, -2, -1, 1}));
        add(new Cell(new int[]{1, -1, 1, 2}));
        add(new Cell(new int[]{2, -1, -2, 1}));
        add(new Cell(new int[]{2, 0, 0, 1}));
        add(new Cell(new int[]{2, 1, 2, 2}));
        add(new Cell(new int[]{1, -2, -1, 2}));
        add(new Cell(new int[]{2, 0, 1, 1}));
        add(new Cell(new int[]{2, -1, -1, -1}));
        add(new Cell(new int[]{1, -2, 0, 0}));
        add(new Cell(new int[]{1, -1, 2, 1}));
        add(new Cell(new int[]{2, -1, -1, 0}));
        add(new Cell(new int[]{2, 0, 1, 0}));
        add(new Cell(new int[]{1, -2, 0, 1}));
        add(new Cell(new int[]{1, -1, 2, 2}));
        add(new Cell(new int[]{2, 0, 1, -1}));
        add(new Cell(new int[]{1, -2, 0, -2}));
        add(new Cell(new int[]{1, -1, 2, -1}));
        add(new Cell(new int[]{2, -1, -1, -2}));
        add(new Cell(new int[]{2, 0, 1, -2}));
        add(new Cell(new int[]{1, -2, 0, -1}));
        add(new Cell(new int[]{1, -1, 2, 0}));
        add(new Cell(new int[]{1, -1, 2, -2}));
        add(new Cell(new int[]{2, -1, -1, 1}));
        add(new Cell(new int[]{1, -2, 0, 2}));
        add(new Cell(new int[]{2, -1, -1, 2}));
        add(new Cell(new int[]{2, 0, 1, 2}));
        add(new Cell(new int[]{2, -2, -2, -1}));
        add(new Cell(new int[]{2, -1, 0, 0}));
        add(new Cell(new int[]{2, 0, 2, 2}));
        add(new Cell(new int[]{1, -2, 1, 1}));
        add(new Cell(new int[]{2, 0, 2, 1}));
        add(new Cell(new int[]{2, -2, -2, 0}));
        add(new Cell(new int[]{2, -1, 0, 1}));
        add(new Cell(new int[]{1, -2, 1, 2}));
        add(new Cell(new int[]{2, 0, 2, 0}));
        add(new Cell(new int[]{2, -1, 0, -2}));
        add(new Cell(new int[]{1, -2, 1, -1}));
        add(new Cell(new int[]{2, -2, -2, -2}));
        add(new Cell(new int[]{2, -1, 0, -1}));
        add(new Cell(new int[]{2, 0, 2, -1}));
        add(new Cell(new int[]{1, -2, 1, 0}));
        add(new Cell(new int[]{2, 0, 2, -2}));
        add(new Cell(new int[]{1, -2, 1, -2}));
        add(new Cell(new int[]{2, -2, -2, 1}));
        add(new Cell(new int[]{2, -1, 0, 2}));
        add(new Cell(new int[]{2, -2, -2, 2}));
        add(new Cell(new int[]{2, -2, -1, 0}));
        add(new Cell(new int[]{2, -1, 1, 1}));
        add(new Cell(new int[]{1, -2, 2, 2}));
        add(new Cell(new int[]{2, -2, -1, 1}));
        add(new Cell(new int[]{2, -1, 1, 2}));
        add(new Cell(new int[]{2, -2, -1, -2}));
        add(new Cell(new int[]{2, -1, 1, -1}));
        add(new Cell(new int[]{1, -2, 2, 0}));
        add(new Cell(new int[]{2, -2, -1, -1}));
        add(new Cell(new int[]{2, -1, 1, 0}));
        add(new Cell(new int[]{1, -2, 2, 1}));
        add(new Cell(new int[]{1, -2, 2, -2}));
        add(new Cell(new int[]{2, -1, 1, -2}));
        add(new Cell(new int[]{1, -2, 2, -1}));
        add(new Cell(new int[]{2, -2, -1, 2}));
        add(new Cell(new int[]{2, -2, 0, 1}));
        add(new Cell(new int[]{2, -1, 2, 2}));
        add(new Cell(new int[]{2, -2, 0, 2}));
        add(new Cell(new int[]{2, -2, 0, -1}));
        add(new Cell(new int[]{2, -1, 2, 0}));
        add(new Cell(new int[]{2, -2, 0, 0}));
        add(new Cell(new int[]{2, -1, 2, 1}));
        add(new Cell(new int[]{2, -1, 2, -2}));
        add(new Cell(new int[]{2, -2, 0, -2}));
        add(new Cell(new int[]{2, -1, 2, -1}));
        add(new Cell(new int[]{2, -2, 1, 2}));
        add(new Cell(new int[]{2, -2, 1, 0}));
        add(new Cell(new int[]{2, -2, 1, 1}));
        add(new Cell(new int[]{2, -2, 1, -2}));
        add(new Cell(new int[]{2, -2, 1, -1}));
        add(new Cell(new int[]{2, -2, 2, 1}));
        add(new Cell(new int[]{2, -2, 2, 2}));
        add(new Cell(new int[]{2, -2, 2, -1}));
        add(new Cell(new int[]{2, -2, 2, 0}));
        add(new Cell(new int[]{2, -2, 2, -2}));
        add(new Cell(new int[]{-2, 2, -2, 2}));
        add(new Cell(new int[]{-2, 2, -2, 1}));
        add(new Cell(new int[]{-2, 2, -2, -2}));
        add(new Cell(new int[]{-2, 2, -2, 0}));
        add(new Cell(new int[]{-2, 2, -2, -1}));
        add(new Cell(new int[]{-2, 2, -1, 2}));
        add(new Cell(new int[]{-2, 2, -1, -1}));
        add(new Cell(new int[]{-2, 2, -1, -2}));
        add(new Cell(new int[]{-2, 2, -1, 1}));
        add(new Cell(new int[]{-2, 2, -1, 0}));
        add(new Cell(new int[]{-2, 1, -2, 2}));
        add(new Cell(new int[]{-2, 1, -2, -1}));
        add(new Cell(new int[]{-2, 2, 0, 0}));
        add(new Cell(new int[]{-2, 1, -2, -2}));
        add(new Cell(new int[]{-2, 2, 0, -1}));
        add(new Cell(new int[]{-2, 1, -2, 1}));
        add(new Cell(new int[]{-2, 2, 0, 2}));
        add(new Cell(new int[]{-2, 1, -2, 0}));
        add(new Cell(new int[]{-2, 2, 0, 1}));
        add(new Cell(new int[]{-2, 2, 0, -2}));
        add(new Cell(new int[]{-1, 2, -2, 2}));
        add(new Cell(new int[]{-2, 1, -1, 0}));
        add(new Cell(new int[]{-2, 2, 1, 1}));
        add(new Cell(new int[]{-1, 2, -2, -1}));
        add(new Cell(new int[]{-2, 1, -1, -1}));
        add(new Cell(new int[]{-2, 2, 1, 0}));
        add(new Cell(new int[]{-1, 2, -2, -2}));
        add(new Cell(new int[]{-2, 1, -1, 2}));
        add(new Cell(new int[]{-1, 2, -2, 1}));
        add(new Cell(new int[]{-2, 1, -1, 1}));
        add(new Cell(new int[]{-2, 2, 1, 2}));
        add(new Cell(new int[]{-1, 2, -2, 0}));
        add(new Cell(new int[]{-2, 1, -1, -2}));
        add(new Cell(new int[]{-2, 2, 1, -1}));
        add(new Cell(new int[]{-2, 2, 1, -2}));
        add(new Cell(new int[]{-2, 0, -2, 0}));
        add(new Cell(new int[]{-2, 1, 0, 1}));
        add(new Cell(new int[]{-2, 2, 2, 2}));
        add(new Cell(new int[]{-1, 2, -1, 0}));
        add(new Cell(new int[]{-2, 0, -2, -1}));
        add(new Cell(new int[]{-2, 1, 0, 0}));
        add(new Cell(new int[]{-2, 2, 2, 1}));
        add(new Cell(new int[]{-1, 2, -1, -1}));
        add(new Cell(new int[]{-2, 0, -2, 2}));
        add(new Cell(new int[]{-1, 2, -1, 2}));
        add(new Cell(new int[]{-2, 0, -2, 1}));
        add(new Cell(new int[]{-2, 1, 0, 2}));
        add(new Cell(new int[]{-1, 2, -1, 1}));
        add(new Cell(new int[]{-2, 2, 2, -2}));
        add(new Cell(new int[]{-2, 0, -2, -2}));
        add(new Cell(new int[]{-2, 1, 0, -1}));
        add(new Cell(new int[]{-2, 2, 2, 0}));
        add(new Cell(new int[]{-1, 2, -1, -2}));
        add(new Cell(new int[]{-2, 1, 0, -2}));
        add(new Cell(new int[]{-2, 2, 2, -1}));
        add(new Cell(new int[]{-2, 0, -1, 1}));
        add(new Cell(new int[]{-2, 1, 1, 2}));
        add(new Cell(new int[]{-1, 2, 0, 1}));
        add(new Cell(new int[]{-1, 1, -2, 0}));
        add(new Cell(new int[]{-2, 0, -1, 0}));
        add(new Cell(new int[]{-2, 1, 1, 1}));
        add(new Cell(new int[]{-1, 2, 0, 0}));
        add(new Cell(new int[]{-1, 1, -2, -1}));
        add(new Cell(new int[]{-1, 1, -2, 2}));
        add(new Cell(new int[]{-2, 0, -1, 2}));
        add(new Cell(new int[]{-1, 2, 0, 2}));
        add(new Cell(new int[]{-1, 1, -2, 1}));
        add(new Cell(new int[]{-2, 1, 1, -2}));
        add(new Cell(new int[]{-2, 0, -1, -1}));
        add(new Cell(new int[]{-2, 1, 1, 0}));
        add(new Cell(new int[]{-1, 2, 0, -1}));
        add(new Cell(new int[]{-1, 1, -2, -2}));
        add(new Cell(new int[]{-2, 0, -1, -2}));
        add(new Cell(new int[]{-2, 1, 1, -1}));
        add(new Cell(new int[]{-1, 2, 0, -2}));
        add(new Cell(new int[]{-2, 0, 0, 2}));
        add(new Cell(new int[]{-2, -1, -2, 1}));
        add(new Cell(new int[]{-1, 2, 1, 2}));
        add(new Cell(new int[]{0, 2, -2, 1}));
        add(new Cell(new int[]{-2, -1, -2, 0}));
        add(new Cell(new int[]{-2, 0, 0, 1}));
        add(new Cell(new int[]{-2, 1, 2, 2}));
        add(new Cell(new int[]{-1, 2, 1, 1}));
        add(new Cell(new int[]{0, 2, -2, 2}));
        add(new Cell(new int[]{0, 2, -2, -1}));
        add(new Cell(new int[]{-2, -1, -2, 2}));
        add(new Cell(new int[]{0, 2, -2, 0}));
        add(new Cell(new int[]{-1, 1, -1, 2}));
        add(new Cell(new int[]{-2, 0, 0, -2}));
        add(new Cell(new int[]{-2, 1, 2, -1}));
        add(new Cell(new int[]{-1, 2, 1, -2}));
        add(new Cell(new int[]{-2, 1, 2, -2}));
        add(new Cell(new int[]{0, 2, -2, -2}));
        add(new Cell(new int[]{-2, 0, 0, 0}));
        add(new Cell(new int[]{-2, 1, 2, 1}));
        add(new Cell(new int[]{-2, -1, -2, -1}));
        add(new Cell(new int[]{-1, 2, 1, 0}));
        add(new Cell(new int[]{-2, -1, -2, -2}));
        add(new Cell(new int[]{-2, 0, 0, -1}));
        add(new Cell(new int[]{-2, 1, 2, 0}));
        add(new Cell(new int[]{-1, 2, 1, -1}));
        add(new Cell(new int[]{-1, 1, -1, -2}));
        add(new Cell(new int[]{-2, -1, -1, 2}));
        add(new Cell(new int[]{0, 2, -1, 2}));
        add(new Cell(new int[]{-1, 0, -2, 1}));
        add(new Cell(new int[]{-1, 1, 0, 2}));
        add(new Cell(new int[]{-2, -1, -1, 1}));
        add(new Cell(new int[]{-2, 0, 1, 2}));
        add(new Cell(new int[]{-1, 2, 2, 2}));
        add(new Cell(new int[]{-1, 0, -2, 0}));
        add(new Cell(new int[]{0, 2, -1, 0}));
        add(new Cell(new int[]{0, 2, -1, 1}));
        add(new Cell(new int[]{-1, 0, -2, 2}));
        add(new Cell(new int[]{-2, 0, 1, -1}));
        add(new Cell(new int[]{-2, -1, -1, -2}));
        add(new Cell(new int[]{-1, 2, 2, -1}));
        add(new Cell(new int[]{0, 2, -1, -2}));
        add(new Cell(new int[]{-1, 1, 0, -2}));
        add(new Cell(new int[]{-2, 0, 1, -2}));
        add(new Cell(new int[]{-1, 2, 2, -2}));
        add(new Cell(new int[]{0, 2, -1, -1}));
        add(new Cell(new int[]{-2, -1, -1, 0}));
        add(new Cell(new int[]{-2, 0, 1, 1}));
        add(new Cell(new int[]{-1, 2, 2, 1}));
        add(new Cell(new int[]{-1, 0, -2, -1}));
        add(new Cell(new int[]{-2, -1, -1, -1}));
        add(new Cell(new int[]{-2, 0, 1, 0}));
        add(new Cell(new int[]{-1, 2, 2, 0}));
        add(new Cell(new int[]{-1, 0, -2, -2}));
        add(new Cell(new int[]{-2, 0, 2, -2}));
        add(new Cell(new int[]{-2, -2, -2, 2}));
        add(new Cell(new int[]{0, 1, -2, 2}));
        add(new Cell(new int[]{-1, 0, -1, 2}));
        add(new Cell(new int[]{-2, -2, -2, 1}));
        add(new Cell(new int[]{-2, -1, 0, 2}));
        add(new Cell(new int[]{-1, 1, 1, 2}));
        add(new Cell(new int[]{0, 2, 0, 1}));
        add(new Cell(new int[]{0, 1, -2, 0}));
        add(new Cell(new int[]{0, 2, 0, 2}));
        add(new Cell(new int[]{0, 1, -2, 1}));
        add(new Cell(new int[]{-2, -2, -2, -2}));
        add(new Cell(new int[]{-2, -1, 0, -1}));
        add(new Cell(new int[]{-2, 0, 2, 0}));
        add(new Cell(new int[]{0, 2, 0, -1}));
        add(new Cell(new int[]{0, 1, -2, -2}));
        add(new Cell(new int[]{-1, 0, -1, -2}));
        add(new Cell(new int[]{-2, -1, 0, -2}));
        add(new Cell(new int[]{-2, 0, 2, -1}));
        add(new Cell(new int[]{0, 2, 0, 0}));
        add(new Cell(new int[]{0, 1, -2, -1}));
        add(new Cell(new int[]{-1, 1, 1, -2}));
        add(new Cell(new int[]{-2, -2, -2, 0}));
        add(new Cell(new int[]{-2, -1, 0, 1}));
        add(new Cell(new int[]{-2, 0, 2, 2}));
        add(new Cell(new int[]{-2, -2, -2, -1}));
        add(new Cell(new int[]{-2, -1, 0, 0}));
        add(new Cell(new int[]{-2, 0, 2, 1}));
        add(new Cell(new int[]{0, 2, 0, -2}));
        add(new Cell(new int[]{-2, -1, 1, -2}));
        add(new Cell(new int[]{-1, 1, 2, -2}));
        add(new Cell(new int[]{1, 2, -2, 2}));
        add(new Cell(new int[]{-1, -1, -2, 2}));
        add(new Cell(new int[]{-2, -2, -1, 2}));
        add(new Cell(new int[]{-1, -1, -2, 1}));
        add(new Cell(new int[]{-1, 0, 0, 2}));
        add(new Cell(new int[]{0, 2, 1, 2}));
        add(new Cell(new int[]{1, 2, -2, 0}));
        add(new Cell(new int[]{1, 2, -2, 1}));
        add(new Cell(new int[]{0, 1, -1, 2}));
        add(new Cell(new int[]{-2, -2, -1, -1}));
        add(new Cell(new int[]{-2, -1, 1, 0}));
        add(new Cell(new int[]{0, 2, 1, 0}));
        add(new Cell(new int[]{1, 2, -2, -2}));
        add(new Cell(new int[]{-1, 1, 2, 0}));
        add(new Cell(new int[]{-1, -1, -2, -2}));
        add(new Cell(new int[]{-2, -2, -1, -2}));
        add(new Cell(new int[]{-2, -1, 1, -1}));
        add(new Cell(new int[]{0, 2, 1, 1}));
        add(new Cell(new int[]{1, 2, -2, -1}));
        add(new Cell(new int[]{-1, 1, 2, -1}));
        add(new Cell(new int[]{-1, 0, 0, -2}));
        add(new Cell(new int[]{-2, -2, -1, 1}));
        add(new Cell(new int[]{-2, -1, 1, 2}));
        add(new Cell(new int[]{0, 2, 1, -2}));
        add(new Cell(new int[]{-1, 1, 2, 2}));
        add(new Cell(new int[]{-1, -1, -2, 0}));
        add(new Cell(new int[]{-2, -2, -1, 0}));
        add(new Cell(new int[]{-2, -1, 1, 1}));
        add(new Cell(new int[]{0, 2, 1, -1}));
        add(new Cell(new int[]{-1, 1, 2, 1}));
        add(new Cell(new int[]{-1, -1, -2, -1}));
        add(new Cell(new int[]{0, 1, -1, -2}));
        add(new Cell(new int[]{0, 2, 2, -2}));
        add(new Cell(new int[]{-2, -2, 0, -2}));
        add(new Cell(new int[]{-2, -1, 2, -1}));
        add(new Cell(new int[]{-1, 0, 1, -2}));
        add(new Cell(new int[]{-2, -1, 2, -2}));
        add(new Cell(new int[]{-1, -1, -1, 2}));
        add(new Cell(new int[]{1, 2, -1, 1}));
        add(new Cell(new int[]{0, 0, -2, 1}));
        add(new Cell(new int[]{0, 1, 0, 2}));
        add(new Cell(new int[]{1, 2, -1, 2}));
        add(new Cell(new int[]{0, 0, -2, 2}));
        add(new Cell(new int[]{-2, -2, 0, 0}));
        add(new Cell(new int[]{-2, -1, 2, 1}));
        add(new Cell(new int[]{0, 2, 2, 1}));
        add(new Cell(new int[]{1, 2, -1, -1}));
        add(new Cell(new int[]{0, 0, -2, -1}));
        add(new Cell(new int[]{-2, -2, 0, -1}));
        add(new Cell(new int[]{-2, -1, 2, 0}));
        add(new Cell(new int[]{0, 2, 2, 2}));
        add(new Cell(new int[]{1, 2, -1, 0}));
        add(new Cell(new int[]{0, 0, -2, 0}));
        add(new Cell(new int[]{-1, -1, -1, -2}));
        add(new Cell(new int[]{-2, -2, 0, 2}));
        add(new Cell(new int[]{0, 2, 2, -1}));
        add(new Cell(new int[]{-1, 0, 1, 2}));
        add(new Cell(new int[]{0, 1, 0, -2}));
        add(new Cell(new int[]{-2, -2, 0, 1}));
        add(new Cell(new int[]{-2, -1, 2, 2}));
        add(new Cell(new int[]{0, 2, 2, 0}));
        add(new Cell(new int[]{1, 2, -1, -2}));
        add(new Cell(new int[]{0, 0, -2, -2}));
        add(new Cell(new int[]{0, 1, 1, -2}));
        add(new Cell(new int[]{-2, -2, 1, -1}));
        add(new Cell(new int[]{-1, 0, 2, -1}));
        add(new Cell(new int[]{-1, -1, 0, -2}));
        add(new Cell(new int[]{-2, -2, 1, -2}));
        add(new Cell(new int[]{-1, 0, 2, -2}));
        add(new Cell(new int[]{-1, -2, -2, 2}));
        add(new Cell(new int[]{1, 2, 0, 2}));
        add(new Cell(new int[]{1, 1, -2, 1}));
        add(new Cell(new int[]{0, 0, -1, 2}));
        add(new Cell(new int[]{1, 1, -2, 2}));
        add(new Cell(new int[]{-2, -2, 1, 1}));
        add(new Cell(new int[]{1, 2, 0, 0}));
        add(new Cell(new int[]{-1, -2, -2, -1}));
        add(new Cell(new int[]{-1, 0, 2, 1}));
        add(new Cell(new int[]{1, 1, -2, -1}));
        add(new Cell(new int[]{-2, -2, 1, 0}));
        add(new Cell(new int[]{1, 2, 0, 1}));
        add(new Cell(new int[]{-1, -2, -2, -2}));
        add(new Cell(new int[]{-1, 0, 2, 0}));
        add(new Cell(new int[]{1, 1, -2, 0}));
        add(new Cell(new int[]{0, 1, 1, 2}));
        add(new Cell(new int[]{1, 2, 0, -2}));
        add(new Cell(new int[]{-1, -2, -2, 1}));
        add(new Cell(new int[]{-1, -1, 0, 2}));
        add(new Cell(new int[]{0, 0, -1, -2}));
        add(new Cell(new int[]{-2, -2, 1, 2}));
        add(new Cell(new int[]{1, 2, 0, -1}));
        add(new Cell(new int[]{-1, -2, -2, 0}));
        add(new Cell(new int[]{-1, 0, 2, 2}));
        add(new Cell(new int[]{1, 1, -2, -2}));
        add(new Cell(new int[]{-2, -2, 2, -2}));
        add(new Cell(new int[]{0, 1, 2, -2}));
        add(new Cell(new int[]{1, 2, 1, -2}));
        add(new Cell(new int[]{0, 1, 2, -1}));
        add(new Cell(new int[]{0, 0, 0, -2}));
        add(new Cell(new int[]{-2, -2, 2, 0}));
        add(new Cell(new int[]{-1, -2, -1, -2}));
        add(new Cell(new int[]{-2, -2, 2, -1}));
        add(new Cell(new int[]{-1, -1, 1, -2}));
        add(new Cell(new int[]{2, 2, -2, 2}));
        add(new Cell(new int[]{0, -1, -2, 2}));
        add(new Cell(new int[]{1, 1, -1, 2}));
        add(new Cell(new int[]{2, 2, -2, 1}));
        add(new Cell(new int[]{-2, -2, 2, 2}));
        add(new Cell(new int[]{2, 2, -2, 0}));
        add(new Cell(new int[]{1, 2, 1, 1}));
        add(new Cell(new int[]{-1, -2, -1, 0}));
        add(new Cell(new int[]{0, 1, 2, 2}));
        add(new Cell(new int[]{0, -1, -2, 0}));
        add(new Cell(new int[]{-2, -2, 2, 1}));
        add(new Cell(new int[]{2, 2, -2, -1}));
        add(new Cell(new int[]{1, 2, 1, 2}));
        add(new Cell(new int[]{-1, -2, -1, -1}));
        add(new Cell(new int[]{0, -1, -2, 1}));
        add(new Cell(new int[]{0, 0, 0, 2}));
        add(new Cell(new int[]{2, 2, -2, -2}));
        add(new Cell(new int[]{1, 2, 1, -1}));
        add(new Cell(new int[]{-1, -2, -1, 2}));
        add(new Cell(new int[]{0, 1, 2, 0}));
        add(new Cell(new int[]{0, -1, -2, -2}));
        add(new Cell(new int[]{1, 1, -1, -2}));
        add(new Cell(new int[]{1, 2, 1, 0}));
        add(new Cell(new int[]{-1, -2, -1, 1}));
        add(new Cell(new int[]{0, 1, 2, 1}));
        add(new Cell(new int[]{0, -1, -2, -1}));
        add(new Cell(new int[]{-1, -1, 1, 2}));
        add(new Cell(new int[]{1, 2, 2, -2}));
        add(new Cell(new int[]{-1, -1, 2, -2}));
        add(new Cell(new int[]{0, 0, 1, -2}));
        add(new Cell(new int[]{1, 2, 2, -1}));
        add(new Cell(new int[]{0, -1, -1, -2}));
        add(new Cell(new int[]{1, 1, 0, -2}));
        add(new Cell(new int[]{-1, -2, 0, -1}));
        add(new Cell(new int[]{-1, -1, 2, 0}));
        add(new Cell(new int[]{-1, -2, 0, -2}));
        add(new Cell(new int[]{-1, -1, 2, -1}));
        add(new Cell(new int[]{1, 0, -2, 2}));
        add(new Cell(new int[]{2, 2, -1, 2}));
        add(new Cell(new int[]{2, 2, -1, 1}));
        add(new Cell(new int[]{1, 2, 2, 2}));
        add(new Cell(new int[]{-1, -2, 0, 1}));
        add(new Cell(new int[]{1, 0, -2, 0}));
        add(new Cell(new int[]{-1, -1, 2, 2}));
        add(new Cell(new int[]{0, 0, 1, 2}));
        add(new Cell(new int[]{2, 2, -1, 0}));
        add(new Cell(new int[]{-1, -2, 0, 0}));
        add(new Cell(new int[]{1, 0, -2, 1}));
        add(new Cell(new int[]{-1, -1, 2, 1}));
        add(new Cell(new int[]{0, -1, -1, 2}));
        add(new Cell(new int[]{1, 1, 0, 2}));
        add(new Cell(new int[]{2, 2, -1, -1}));
        add(new Cell(new int[]{1, 2, 2, 0}));
        add(new Cell(new int[]{1, 0, -2, -2}));
        add(new Cell(new int[]{2, 2, -1, -2}));
        add(new Cell(new int[]{1, 2, 2, 1}));
        add(new Cell(new int[]{-1, -2, 0, 2}));
        add(new Cell(new int[]{1, 0, -2, -1}));
        add(new Cell(new int[]{2, 2, 0, -2}));
        add(new Cell(new int[]{-1, -2, 1, -2}));
        add(new Cell(new int[]{0, 0, 2, -1}));
        add(new Cell(new int[]{0, -1, 0, -2}));
        add(new Cell(new int[]{1, 1, 1, -2}));
        add(new Cell(new int[]{0, -2, -2, -2}));
        add(new Cell(new int[]{0, 0, 2, 0}));
        add(new Cell(new int[]{1, 0, -1, -2}));
        add(new Cell(new int[]{-1, -2, 1, 0}));
        add(new Cell(new int[]{-1, -2, 1, -1}));
        add(new Cell(new int[]{0, 0, 2, -2}));
        add(new Cell(new int[]{2, 1, -2, 2}));
        add(new Cell(new int[]{2, 1, -2, 1}));
        add(new Cell(new int[]{2, 2, 0, 2}));
        add(new Cell(new int[]{-1, -2, 1, 2}));
        add(new Cell(new int[]{0, -2, -2, 1}));
        add(new Cell(new int[]{0, -1, 0, 2}));
        add(new Cell(new int[]{1, 1, 1, 2}));
        add(new Cell(new int[]{2, 1, -2, 0}));
        add(new Cell(new int[]{2, 2, 0, 1}));
        add(new Cell(new int[]{-1, -2, 1, 1}));
        add(new Cell(new int[]{0, -2, -2, 2}));
        add(new Cell(new int[]{1, 0, -1, 2}));
        add(new Cell(new int[]{2, 1, -2, -1}));
        add(new Cell(new int[]{2, 2, 0, 0}));
        add(new Cell(new int[]{0, -2, -2, -1}));
        add(new Cell(new int[]{0, 0, 2, 1}));
        add(new Cell(new int[]{2, 1, -2, -2}));
        add(new Cell(new int[]{2, 2, 0, -1}));
        add(new Cell(new int[]{0, -2, -2, 0}));
        add(new Cell(new int[]{0, 0, 2, 2}));
        add(new Cell(new int[]{2, 1, -1, -2}));
        add(new Cell(new int[]{2, 2, 1, -1}));
        add(new Cell(new int[]{-1, -2, 2, -1}));
        add(new Cell(new int[]{0, -2, -1, -2}));
        add(new Cell(new int[]{1, 1, 2, -1}));
        add(new Cell(new int[]{1, 0, 0, -2}));
        add(new Cell(new int[]{2, 2, 1, -2}));
        add(new Cell(new int[]{-1, -2, 2, -2}));
        add(new Cell(new int[]{0, -2, -1, -1}));
        add(new Cell(new int[]{1, -1, -2, -2}));
        add(new Cell(new int[]{1, 1, 2, 0}));
        add(new Cell(new int[]{-1, -2, 2, 1}));
        add(new Cell(new int[]{-1, -2, 2, 0}));
        add(new Cell(new int[]{1, 1, 2, -2}));
        add(new Cell(new int[]{0, -1, 1, -2}));
        add(new Cell(new int[]{2, 1, -1, 2}));
        add(new Cell(new int[]{0, -2, -1, 2}));
        add(new Cell(new int[]{1, -1, -2, 1}));
        add(new Cell(new int[]{1, 0, 0, 2}));
        add(new Cell(new int[]{2, 1, -1, 1}));
        add(new Cell(new int[]{2, 2, 1, 2}));
        add(new Cell(new int[]{-1, -2, 2, 2}));
        add(new Cell(new int[]{1, -1, -2, 2}));
        add(new Cell(new int[]{2, 1, -1, 0}));
        add(new Cell(new int[]{2, 2, 1, 1}));
        add(new Cell(new int[]{0, -2, -1, 0}));
        add(new Cell(new int[]{1, -1, -2, -1}));
        add(new Cell(new int[]{1, 1, 2, 1}));
        add(new Cell(new int[]{2, 1, -1, -1}));
        add(new Cell(new int[]{2, 2, 1, 0}));
        add(new Cell(new int[]{0, -2, -1, 1}));
        add(new Cell(new int[]{1, -1, -2, 0}));
        add(new Cell(new int[]{1, 1, 2, 2}));
        add(new Cell(new int[]{0, -1, 1, 2}));
        add(new Cell(new int[]{2, 1, 0, -1}));
        add(new Cell(new int[]{2, 2, 2, 0}));
        add(new Cell(new int[]{0, -2, 0, -1}));
        add(new Cell(new int[]{0, -1, 2, 0}));
        add(new Cell(new int[]{1, -1, -1, -2}));
        add(new Cell(new int[]{2, 0, -2, -2}));
        add(new Cell(new int[]{2, 1, 0, -2}));
        add(new Cell(new int[]{2, 2, 2, -1}));
        add(new Cell(new int[]{0, -2, 0, 0}));
        add(new Cell(new int[]{0, -1, 2, 1}));
        add(new Cell(new int[]{2, 2, 2, -2}));
        add(new Cell(new int[]{0, -1, 2, -2}));
        add(new Cell(new int[]{0, -2, 0, -2}));
        add(new Cell(new int[]{0, -1, 2, -1}));
        add(new Cell(new int[]{1, 0, 1, -2}));
    }};
}